<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-US" /><meta name="Microsoft.Help.Locale" content="en-US" /><meta name="Microsoft.Help.TopicLocale" content="en-US" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>Custom Checkers</title><meta name="Microsoft.Help.Id" content="a3f9771a-ac24-46c0-97df-d2bde6a990e8" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="XML" /><meta name="Description" content="This chapter is about self-created checker dlls. You can use your Custom Checkers to monitor any processes or statuses that only you can know." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/ad9ee8b6-c68c-47ec-9584-d85046eb3137.htm" title="Vishnu - the logical process monitor" tocid="roottoc">Vishnu - the logical process monitor</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1ccf9fe4-94f8-49ff-9234-506c5ad9daa7.htm" title="fortgeschrittene Themen" tocid="1ccf9fe4-94f8-49ff-9234-506c5ad9daa7">Advanced Topics</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ac884694-516c-4c98-a2af-d79cc504d0f6.htm" title="benannte Trigger und Logger" tocid="ac884694-516c-4c98-a2af-d79cc504d0f6">Named Triggers and Loggers</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/628bbc96-dcd7-4563-a515-5a2edf9ebc10.htm" title="Snapshots" tocid="628bbc96-dcd7-4563-a515-5a2edf9ebc10">Snapshots</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0af46309-8c47-467f-a231-36615b7488d4.htm" title="Anforderungen an Anwender-Module" tocid="0af46309-8c47-467f-a231-36615b7488d4">Requirements for user modules</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/a3f9771a-ac24-46c0-97df-d2bde6a990e8.htm" title="Custom Checkers" tocid="a3f9771a-ac24-46c0-97df-d2bde6a990e8">Custom Checkers</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/74204d60-cbb3-4f38-8266-aa7af541143f.htm" title="Custom Views" tocid="74204d60-cbb3-4f38-8266-aa7af541143f">Custom Views</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f724b721-c805-4dbe-8db4-1529c0c68f3d.htm" title="Custom Parameter-Reader" tocid="f724b721-c805-4dbe-8db4-1529c0c68f3d">Custom Parameter Reader</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b2bd8510-a131-4466-9fac-66f2033d92a0.htm" title="Custom ValueModifiers" tocid="b2bd8510-a131-4466-9fac-66f2033d92a0">Custom ValueModifiers</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c2c472b6-b252-4bd6-bf6a-0b15bc404ea4.htm" title="Custom Triggers" tocid="c2c472b6-b252-4bd6-bf6a-0b15bc404ea4">Custom Triggers</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3ccc247e-ea3a-47fc-9ed6-4713baf96986.htm" title="Custom Loggers" tocid="3ccc247e-ea3a-47fc-9ed6-4713baf96986">Custom Loggers</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f14917bd-1d50-41f0-85ff-14462a770915.htm" title="Checker-Historie loggen" tocid="f14917bd-1d50-41f0-85ff-14462a770915">Log Checker History</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>Custom Checkers</h1></td></tr></table><div><p>
									This chapter deals with self-created <strong>Checker dlls</strong>.
				You can use your own <span class="keyword">Checkers</span> to monitor any process or state that only you know about.
				<strong>Vishnu</strong> already offers some standard checkers, but sooner or later you will want to create
				your own <span class="keyword">Checkers</span> with special functions. However, to create your own DLLs,
				you need basic knowledge of a <span class="keyword">DotNet</span>-language, e.g. <span class="keyword">C#</span>.
			</p><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Important" />Important</th></tr><tr><td>
				<p>
					Nevertheless, you can get started with <span class="keyword">C#</span> using a
					<strong>Vishnu</strong>-<strong>Visual Studio</strong>-extension even without any programming knowledge.
					At the push of a button, an executable test project with your own new <span class="keyword">Checker</span>
					will be generated.
				</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="UserCheckerDemoJob"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDAB')" onkeypress="SectionExpandCollapse_CheckKey('IDDAB', event)" tabindex="0"><img id="IDDABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />the demo job</span></div><div id="IDDABSection" class="collapsibleSection"><p>
										This is what the demo job for your Custom Checkers looks like:
				
				</p><div class="mediaNear"><img alt="User Checker Demo" src="../media/UserCheckerDemo.png" /></div><p>
										This is the associated <span class="keyword">JobDescription.xml</span>:
				
				</p><div id="IDDBDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDDBDAB_tab1" class="codeSnippetContainerTabSingle">JobDescription.xml</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDDBDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDDBDAB');return false;" title="Copy">Copy</a></div></div><div id="IDDBDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;?</span><span class="highlight-xml-tag">xml</span> <span class="highlight-xml-attribute-name">version</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1.0"</span> <span class="highlight-xml-attribute-name">encoding</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"utf-8"</span><span class="highlight-xml-bracket">?&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">JobDescription</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>UserCheckerDemo<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalExpression</span><span class="highlight-xml-bracket">&gt;</span>Predecessor AND UserChecker<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalExpression</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Checkers</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"array"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Checker</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>Predecessor<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>TrueFalseExceptionChecker.dll<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Parameters</span><span class="highlight-xml-bracket">&gt;</span>False:True:Exception|10|Predecessor: Hello World<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Parameters</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger</span><span class="highlight-xml-bracket">&gt;</span>
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>TimerTrigger.dll<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Parameters</span><span class="highlight-xml-bracket">&gt;</span>P:3|P:15<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Parameters</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Checker</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Checker</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>UserChecker<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>Plugin\UserChecker.dll<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger</span><span class="highlight-xml-bracket">&gt;</span>
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Reference</span><span class="highlight-xml-bracket">&gt;</span>True<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Reference</span><span class="highlight-xml-bracket">&gt;</span>
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Parameters</span><span class="highlight-xml-bracket">&gt;</span>Predecessor<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Parameters</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Checker</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Checkers</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">JobDescription</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />  Note</th></tr><tr><td><p>
													A quick reminder: the start job can be set via <a href="E6ECB24A-CA5C-4785-9514-992F359D394A.htm">Configuration and parameters</a>.
					
				</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="UserCheckerDemoProjektErzeugung"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDEAB')" onkeypress="SectionExpandCollapse_CheckKey('IDEAB', event)" tabindex="0"><img id="IDEABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />the demo project - created quickly</span></div><div id="IDEABSection" class="collapsibleSection">
				<p>
					Using the Visual Studio extension <strong>Vishnu_UserChecker_VSIX.vsix</strong> (install by double-clicking),
					you can add a C# project template for your Custom Checkers to Visual Studio.
				</p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td><p><a href="https://neteti.de/extensions/free/64/Vishnu_UserChecker_VSIX.vsix" target="_blank" alt="Vishnu_UserChecker_VSIX.vsix">
																Vishnu_UserChecker_VSIX.vsix download link
							</a></p></td></tr></table></div><div class="mediaNear"><img alt="Vishnu User Checker VSIX" src="../media/Vishnu_UserChecker_VSIX.png" /></div><p>
											This project template can then be used later for a new project:
				</p><div class="mediaNear"><img alt="Vishnu User Checker VSIX select" src="../media/Vishnu_UserChecker_VSIX_select.png" /></div><p>
											A project folder with a checker project and a test project is generated.
				</p><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Achtung" />Attention</th></tr><tr><td><p>
					During the generation of the projects, two error messages appear stating that not all required packages
					could be added to the project. However, these are not true and can be ignored.
					</p></td></tr></table></div><div class="mediaNear"><img alt="User Checker Solution" src="../media/UserCheckerSolution.png" /></div><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />  Note</th></tr><tr><td><p>
						The UserChecker and the test project are immediately buildable and the UserChecker could be used with the
						implemented demo functionality as <strong>Vishnu</strong>-checker.
					</p><p>
						Here is the output of the test project:
					</p></td></tr></table></div><div class="mediaNear"><img alt="User Checker Demo Run" src="../media/UserCheckerDemoRun.png" /></div></div><div class="collapsibleAreaRegion" id="UserCheckerDemoProjektDetails"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFAB')" onkeypress="SectionExpandCollapse_CheckKey('IDFAB', event)" tabindex="0"><img id="IDFABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />the demo project - Details</span></div><div id="IDFABSection" class="collapsibleSection"><p>
						The <strong>UserChecker</strong> class in the project generated by the project template (see above)
						contains the <span class="keyword">Work</span> method as the main processing logic.
						Here you can incorporate your business-specific processing logic:
				</p><div id="IDBBFAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDBBFAB_tab1" class="codeSnippetContainerTabSingle">Work' method in the UserChecker class</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDBBFAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDBBFAB');return false;" title="Copy">Copy</a></div></div><div id="IDBBFAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">    ...
<span class="highlight-keyword">private</span> <span class="highlight-keyword">bool</span>? Work(TreeEvent source)
{
    <span class="highlight-comment">// As an example, an additional parameter is set here via the passed TreeEvent</span>
    <span class="highlight-comment">// from the result of an assumed predecessor checker.</span>
    <span class="highlight-comment">// However, this part is not required for most checkers.</span>
    <span class="highlight-keyword">string</span> demoInterestingPredecessorHello = <span class="highlight-keyword">zero</span>;
    <span class="highlight-keyword">if</span> (source?.Results?.ContainsKey(<span class="highlight-literal">"Predecessor"</span>) == <span class="highlight-keyword">true</span>)
    {
        <span class="highlight-keyword">object</span> returnObject = source.Results[<span class="highlight-literal">"Predecessor"</span>ReturnObject;
        demoInterestingPredecessorHello = GenericPropertyGetter.GetProperty&lt;<span class="highlight-keyword">string</span>&gt;(
            returnObject, <span class="highlight-literal">"DefaultResultProperty"</span>);
    }
    <span class="highlight-keyword">else</span>
    {
        <span class="highlight-keyword">if</span> (source?.Environment?.ContainsKey(<span class="highlight-literal">"Predecessor"</span>) == <span class="highlight-keyword">true</span>)
        {
            <span class="highlight-keyword">object</span> returnObject = source.Environment[<span class="highlight-literal">"Predecessor"</span>ReturnObject;
            demoInterestingPredecessorHello = GenericPropertyGetter.GetProperty&lt;<span class="highlight-keyword">string</span>&gt;(
                returnObject, <span class="highlight-literal">"DefaultResultProperty"</span>);
        }
        <span class="highlight-comment">// Depending on the requirements, an exception can be thrown here.</span>
        <span class="highlight-comment">//else</span>
        <span class="highlight-comment">//{</span>
        <span class="highlight-comment">// throw new ApplicationException(</span>
        <span class="highlight-comment">// "UserChecker: DemoInterestingPredecessor was not found!");</span>
        <span class="highlight-comment">//}</span>
    }

    <span class="highlight-comment">// This is followed by the actual checker processing, which returns an extended boolean.</span>
    <span class="highlight-comment">// of this checker and also fills a return object with additional information if necessary.</span>
    <span class="highlight-comment">// The return can be completely independent of Results or Environment; is only relevant here for</span>
    <span class="highlight-comment">// the demo is coded dependent.</span>
    <span class="highlight-comment">// TODO: you can implement your own processing here.</span>
    <span class="highlight-keyword">if</span> (!String.IsNullOrEmpty(demoInterestingPredecessorHello))
    {
        <span class="highlight-keyword">this</span>._returnObject = demoInterestingPredecessorHello;
        <span class="highlight-keyword">return</span> <span class="highlight-keyword">true</span>;
    }
    <span class="highlight-keyword">else</span>
    {
        <span class="highlight-keyword">this</span>._returnObject = <span class="highlight-literal">"no Predecessor-Result found!"</span>;
        <span class="highlight-keyword">return</span> <span class="highlight-keyword">false</span>;
    }
}
    ...</pre></div></div></div><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />  Note</th></tr><tr><td><p>
													As you can see in the example, access to the Vishnu environment is also possible.
						However, this is rarely necessary in practice.
					</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="SieheAuch"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDGAB')" onkeypress="SectionExpandCollapse_CheckKey('IDGAB', event)" tabindex="0"><img id="IDGABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See also</span></div><div id="IDGABSection" class="collapsibleSection"><p><a href="bc0ffa08-c936-4fad-8fdb-dbd2279fc360.htm#Checker">Vishnu actors</a></p><p><a href="74204d60-cbb3-4f38-8266-aa7af541143f.htm">Custom Views</a></p></div></div></div><div id="PageFooter" class="pageFooter">Naturally, many findings and developments are based on information freely available on the Internet. Any missing references to original authors are unintentional and will be updated as soon as they are reported.<p>Copyright © 2012-2025 Erik Nagel</p><div class="feedbackLink">Send comments about this feature to
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback will be used to improve the documentation and the product. Your email address will not be used for any other purpose and will be deleted after the reported issue has been resolved. While working on the problem, you may be contacted by email for further details or clarification of your feedback. After the problem has been isolated, you may receive an email to resolve the issue.");
        </script></div></body></html>