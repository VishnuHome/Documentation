<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-US" /><meta name="Microsoft.Help.Locale" content="en-US" /><meta name="Microsoft.Help.TopicLocale" content="en-US" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>Custom ValueModifiers</title><meta name="Microsoft.Help.Id" content="b2bd8510-a131-4466-9fac-66f2033d92a0" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="XML" /><meta name="Description" content="This chapter is about self-created ValueModifiers." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/ad9ee8b6-c68c-47ec-9584-d85046eb3137.htm" title="Vishnu - the logical process monitor" tocid="roottoc">Vishnu - the logical process monitor</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1ccf9fe4-94f8-49ff-9234-506c5ad9daa7.htm" title="fortgeschrittene Themen" tocid="1ccf9fe4-94f8-49ff-9234-506c5ad9daa7">Advanced Topics</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ac884694-516c-4c98-a2af-d79cc504d0f6.htm" title="benannte Trigger und Logger" tocid="ac884694-516c-4c98-a2af-d79cc504d0f6">Named Triggers and Loggers</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/628bbc96-dcd7-4563-a515-5a2edf9ebc10.htm" title="Snapshots" tocid="628bbc96-dcd7-4563-a515-5a2edf9ebc10">Snapshots</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0af46309-8c47-467f-a231-36615b7488d4.htm" title="Anforderungen an Anwender-Module" tocid="0af46309-8c47-467f-a231-36615b7488d4">Requirements for user modules</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/a3f9771a-ac24-46c0-97df-d2bde6a990e8.htm" title="Custom Checkers" tocid="a3f9771a-ac24-46c0-97df-d2bde6a990e8">Custom Checkers</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/74204d60-cbb3-4f38-8266-aa7af541143f.htm" title="Custom Views" tocid="74204d60-cbb3-4f38-8266-aa7af541143f">Custom Views</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f724b721-c805-4dbe-8db4-1529c0c68f3d.htm" title="Custom Parameter-Reader" tocid="f724b721-c805-4dbe-8db4-1529c0c68f3d">Custom Parameter Reader</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/b2bd8510-a131-4466-9fac-66f2033d92a0.htm" title="Custom ValueModifiers" tocid="b2bd8510-a131-4466-9fac-66f2033d92a0">Custom ValueModifiers</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c2c472b6-b252-4bd6-bf6a-0b15bc404ea4.htm" title="Custom Triggers" tocid="c2c472b6-b252-4bd6-bf6a-0b15bc404ea4">Custom Triggers</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3ccc247e-ea3a-47fc-9ed6-4713baf96986.htm" title="Custom Loggers" tocid="3ccc247e-ea3a-47fc-9ed6-4713baf96986">Custom Loggers</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f14917bd-1d50-41f0-85ff-14462a770915.htm" title="Checker-Historie loggen" tocid="f14917bd-1d50-41f0-85ff-14462a770915">Log Checker History</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>Custom ValueModifiers</h1></td></tr></table><div><p>
									This chapter deals with self-created <strong>ValueModifyers</strong>.<br />
								Custom <span class="keyword">ValueModifiers</span> you will rarely need, because <strong>Vishnu</strong> already provides
				<span class="keyword">ValueModifiers</span> for the standard result types <span class="keyword">Boolean</span>,
				all <span class="keyword">Integer</span>-types, <span class="keyword">DateTime</span> and
				<span class="keyword">String</span> with standard <span class="keyword">C#</span>-formatting.<br />
				What <span class="keyword">ValueModifiers</span> actually are and how they are used is described in detail on
				<a href="bc0ffa08-c936-4fad-8fdb-dbd2279fc360.htm#ValueModifier">Vishnu actors</a> 
				in <span class="keyword">ValueModifier</span>.
			</p><p>
				Let's assume that you can no longer get by with the <strong>Vishnu</strong>-ValueModifiers and need to implement extended logic
				or handle a special result type. This is exactly what custom ValueModifiers are designed for.
			</p><p>
								In the following example, the corresponding moon phase is to be displayed for a given date.
				The internal result type is, as you can see below, simply <span class="keyword">Int32</span>,
				but the conversion of the date into the value of a moon phase requires its own logic.
			
			</p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td><p>
										The following example also shows an application for
					
					<a href="74204d60-cbb3-4f38-8266-aa7af541143f.htm">Custom Views</a>.
				
				</p><p>
										Thanks also to https://www.freeimages.com/illustrations/vector/moonphase.
				
				</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="ValueModifierDemoJob"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCAB')" onkeypress="SectionExpandCollapse_CheckKey('IDCAB', event)" tabindex="0"><img id="IDCABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />the demo job</span></div><div id="IDCABSection" class="collapsibleSection"><p>
										This is what the demo job looks like for your own <span class="keyword">ValueModifier</span> in operation:
				
				</p><div class="mediaNear"><img alt="Check User Value Modifier" src="../media/CheckUserValueModifier.png" /></div><p>
					A date can be entered (or selected) via the <strong>DateInput</strong> dialog, which is displayed in the Moon Phase node
					as an image of the moon phase that matches the date.
				</p></div><div class="collapsibleAreaRegion" id="ValueModifierDemoJobDescription"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDAB')" onkeypress="SectionExpandCollapse_CheckKey('IDDAB', event)" tabindex="0"><img id="IDDABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />the corresponding JobDescription.xml</span></div><div id="IDDABSection" class="collapsibleSection"><p>
										This is the <span class="keyword">JobDescription.xml</span> for the demo job for your own <span class="keyword">ValueModifier</span>:
				
				</p><div id="IDBBDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDBBDAB_tab1" class="codeSnippetContainerTabSingle">JobDescription.xml</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDBBDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDBBDAB');return false;" title="Copy">Copy</a></div></div><div id="IDBBDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;?</span><span class="highlight-xml-tag">xml</span> <span class="highlight-xml-attribute-name">version</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1.0"</span> <span class="highlight-xml-attribute-name">encoding</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"utf-8"</span><span class="highlight-xml-bracket">?&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">JobDescription</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>CheckUserValueModifier<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalExpression</span><span class="highlight-xml-bracket">&gt;</span>
    DateInput AND Moon phase
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalExpression</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Checkers</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"array"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Checker</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>DateInput<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>WPFDateDialog.dll<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Checker</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Checkers</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ValueModifiers</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">ValueModifier</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>Moon phase<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">UserControlPath</span><span class="highlight-xml-bracket">&gt;</span>Plugin\SingleNodeUserControl_CheckMoonPhase.dll<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">UserControlPath</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Reference</span><span class="highlight-xml-bracket">&gt;</span>DateInput<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Reference</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>Plugin\DateToMoonage.dll<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Type</span><span class="highlight-xml-bracket">&gt;</span>Object<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Type</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">ValueModifier</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">ValueModifiers</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">JobDescription</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><p>

           As you can see, the instruction <span class="keyword">&lt;PhysicalPath&gt;Plugin\DateToMoonage.dll&lt;&#47;PhysicalPath&gt;</span>
           refers to your own <span class="keyword">UserValueModifier</span>.<br />
           The type is generally set to <span class="keyword">Object</span> for Vishnu. The UserValueModifier and the UserView
           <strong> SingleNodeUserControl_CheckMoonPhase.dll</strong> are then responsible for the correct handling of the actual result type.
          </p><p>
          	The UserValueModifier <strong> DateToMoonage.dll</strong> is in turn responsible for the correct handling of the result of
            the node <strong>DateInput</strong>, which is referred to with the instruction 
            <span class="keyword">&lt;Reference&gt;DateInput&lt;&#47;Reference&gt;</span>.
				</p></div><div class="collapsibleAreaRegion" id="ValueModifierDemoProjektDetails"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDEAB')" onkeypress="SectionExpandCollapse_CheckKey('IDEAB', event)" tabindex="0"><img id="IDEABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />the demo project - Details</span></div><div id="IDEABSection" class="collapsibleSection"><p>
					The <strong>DateToMoonAge</strong> class must implement the <strong>IValueModifier</strong> interface,
					as shown in the following code snippet.
				
				</p><div id="IDBBEAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDBBEAB_tab1" class="codeSnippetContainerTabSingle">Extract from the DateToMoonAge class</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDBBEAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDBBEAB');return false;" title="Copy">Copy</a></div></div><div id="IDBBEAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">...
  <span class="highlight-comment">/// &lt;summary&gt;</span>
  <span class="highlight-comment">/// Converts a passed date into the corresponding moon age in days.</span>
  <span class="highlight-comment">/// &lt;/summary&gt;</span>
  <span class="highlight-comment">/// &lt;remarks&gt;</span>
  <span class="highlight-comment">/// File: DateToMoonAge.cs</span>
  <span class="highlight-comment">/// Author: Erik Nagel, NetEti</span>
  <span class="highlight-comment">/// Many thanks to Mostafa Kaisoun for his calculation logic</span>
  <span class="highlight-comment">/// https://www.codeproject.com/script/Membership/View.aspx?mid=1961229</span>
  <span class="highlight-comment">/// </span>
  <span class="highlight-comment">/// 04.04.2020 Erik Nagel: created</span>
  <span class="highlight-comment">/// &lt;/remarks&gt;</span>
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> DateToMoonAge : IValueModifier
  {
      <span class="highlight-comment">/// &lt;summary&gt;</span>
      <span class="highlight-comment">/// Converts a passed date into the corresponding moon age in days.</span>
      <span class="highlight-comment">/// &lt;/summary&gt;</span>
      <span class="highlight-comment">/// &lt;param name="toConvert"&gt;Date as DateTime.&lt;/param&gt;</span>
      <span class="highlight-comment">/// &lt;returns&gt;Moon age in days.&lt;/returns&gt;</span>
      <span class="highlight-keyword">public</span> <span class="highlight-keyword">object</span> ModifyValue(<span class="highlight-keyword">object</span> toConvert)
      {
          <span class="highlight-keyword">if</span> (toConvert <span class="highlight-keyword">is</span> DateTime)
          {
              <span class="highlight-keyword">if</span> (toConvert != <span class="highlight-keyword">zero</span>)
              {
                  DateTime inDateTime = (DateTime)toConvert;
                  <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> DateToMoonAge_ReturnObject(<span class="highlight-keyword">this</span>.MoonAge(inDateTime.Day, inDateTime.Month, inDateTime.Year));
              }
              <span class="highlight-keyword">else</span>
              {
                  <span class="highlight-keyword">return</span> toConvert;
              }
          }
          <span class="highlight-keyword">else</span>
          {
              <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> ArgumentException(String.Format(<span class="highlight-literal">"{0}: cannot convert {1}, DateTime is expected"</span>, <span class="highlight-keyword">this</span>.GetType().Name, toConvert.ToString()));
          }
      }
...
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">int</span> MoonAge(<span class="highlight-keyword">int</span> d, <span class="highlight-keyword">int</span> m, <span class="highlight-keyword">int</span> y)
    {
      ...
    }
...
  }
...</pre></div></div></div><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />  Note</th></tr><tr><td><p>
													At this point, many thanks again to Mostafa Kaisoun for his calculation logic
						(https://www.codeproject.com/script/Membership/View.aspx?mid=1961229).
							How the calculation is carried out in detail is not important here, the only decisive factor is that it produces a result of type
						<span class="keyword">int</span> (corresponds to <span class="keyword">Int32</span>).
					
					</p></td></tr></table></div><p>
						The class <strong>DateToMoonAge</strong> returns an object of type <strong>DateToMoonAge_ReturnObject</strong>.
						The following code snippet shows excerpts from the corresponding class.
				
				</p><div id="IDEBEAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDEBEAB_tab1" class="codeSnippetContainerTabSingle">Extract from the DateToMoonAge_ReturnObject class</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDEBEAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDEBEAB');return false;" title="Copy">Copy</a></div></div><div id="IDEBEAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">...
  <span class="highlight-comment">/// &lt;summary&gt;</span>
  <span class="highlight-comment">/// ReturnObject for the result of the DateToMoonAge ValueModifier.</span>
  <span class="highlight-comment">/// &lt;/summary&gt;</span>
  <span class="highlight-comment">/// &lt;remarks&gt;</span>
  <span class="highlight-comment">/// Author: Erik Nagel, NetEti</span>
  <span class="highlight-comment">///</span>
  <span class="highlight-comment">/// 04.04.2020 Erik Nagel: created</span>
  <span class="highlight-comment">/// &lt;/remarks&gt;</span>
  [DataContract] <span class="highlight-comment">//[Serialisable()]</span>
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> DateToMoonAge_ReturnObject
  {
      <span class="highlight-comment">/// &lt;summary&gt;</span>
      <span class="highlight-comment">/// Moon age in days.</span>
      <span class="highlight-comment">/// &lt;/summary&gt;</span>
      [DataMember]
      <span class="highlight-keyword">public</span> <span class="highlight-keyword">int</span> MoonAge { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
...
      <span class="highlight-comment">/// &lt;summary&gt;</span>
      <span class="highlight-comment">/// Constructor - accepts a string value for the DefaultResultProperty.</span>
      <span class="highlight-comment">/// &lt;/summary&gt;</span>
      <span class="highlight-comment">/// &lt;param name="resultProperty"&gt;Int value for the MoonAgeProperty&lt;/param&gt;</span>
      <span class="highlight-keyword">public</span> DateToMoonAge_ReturnObject(<span class="highlight-keyword">int</span> resultProperty)
      {
          <span class="highlight-keyword">this</span>.MoonAge = resultProperty;
      }

      <span class="highlight-comment">// Serialisation and de-serialisation routines follow</span>
      ...
  }
...</pre></div></div></div><p>
	        This class is used to transport the result of <strong>DateToMoonAge.cs</strong> through the <strong>Vishnu</strong>-processing
	        (as an anonymous object). <strong>SingleNodeUserControl_CheckMoonPhase.dll</strong> then resolves the object, which is anonymous
	        for Vishnu, back to <strong>DateToMoonAge_ReturnObject</strong>. In order for this to work, routines for serializing and
	        de-serializing the data to be transported (here the property DateToMoonAge_ReturnObject) must be implemented
	        in DateToMoonAge_ReturnObject.
				</p><p>
					Serialisation and de-serialisation are always the same in principle and have already been described in detail in the chapter			
					<a href="74204d60-cbb3-4f38-8266-aa7af541143f.htm#Serialisierung">Custom Views</a> in the subitem <span class="keyword">Serialisation</span>.
						Please refer to this if necessary.
				
				</p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td><p>
							All code extracts are reduced to the parts necessary for the explanation. If you are interested in further details,
							you can consult the original sources at any time.
					
					</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="SieheAuch"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFAB')" onkeypress="SectionExpandCollapse_CheckKey('IDFAB', event)" tabindex="0"><img id="IDFABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See also</span></div><div id="IDFABSection" class="collapsibleSection"><p><a href="bc0ffa08-c936-4fad-8fdb-dbd2279fc360.htm#ValueModifier">Vishnu actors</a></p><p><a href="74204d60-cbb3-4f38-8266-aa7af541143f.htm">Custom Views</a></p></div></div></div><div id="PageFooter" class="pageFooter">Naturally, many findings and developments are based on information freely available on the Internet. Any missing references to original authors are unintentional and will be updated as soon as they are reported.<p>Copyright © 2012-2024 Erik Nagel</p><div class="feedbackLink">Send comments about this feature to
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback will be used to improve the documentation and the product. Your email address will not be used for any other purpose and will be deleted after the reported issue has been resolved. While working on the problem, you may be contacted by email for further details or clarification of your feedback. After the problem has been isolated, you may receive an email to resolve the issue.");
        </script></div></body></html>