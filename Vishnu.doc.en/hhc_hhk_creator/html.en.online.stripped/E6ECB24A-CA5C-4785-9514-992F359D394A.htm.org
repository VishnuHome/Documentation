<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-US" /><meta name="Microsoft.Help.Locale" content="en-US" /><meta name="Microsoft.Help.TopicLocale" content="en-US" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>Configuration and parameters</title><meta name="Microsoft.Help.Id" content="E6ECB24A-CA5C-4785-9514-992F359D394A" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="Description" content="The behavior of Vishnu can be set using various parameters. These parameters can be specified via the command line when Vishnu is called, but they can also be set via the , the environment or the registry." /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/ad9ee8b6-c68c-47ec-9584-d85046eb3137.htm" title="Vishnu - the logical process monitor" tocid="roottoc">Vishnu - the logical process monitor</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/E6ECB24A-CA5C-4785-9514-992F359D394A.htm" title="Konfiguration und Parameter" tocid="E6ECB24A-CA5C-4785-9514-992F359D394A">Configuration and parameters</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/15204f64-ecf7-44b6-822d-74e36b99927d.htm" title="Vishnu Parameter-Ersetzung" tocid="15204f64-ecf7-44b6-822d-74e36b99927d">Vishnu parameter substitution</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9b9475bc-f8a9-4e7a-a84a-373276329b00.htm" title="Vishnu.exe.config.user" tocid="9b9475bc-f8a9-4e7a-a84a-373276329b00">Vishnu.exe.config.user</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>Configuration and parameters</h1></td></tr></table><div id="Intro"><p>
        The behavior of <strong>Vishnu</strong> can be adjusted using various parameters.
        
        These parameters can be specified when calling <strong>Vishnu</strong> via the command line,
        but they can also be set via <a href="9b9475bc-f8a9-4e7a-a84a-373276329b00.htm">Vishnu.exe.config.user</a>,
        the <span class="keyword">Environment</span>, or the <span class="keyword">Registry</span>.
        Vishnu also forwards "anonymous" parameters that are unknown to it to <span class="keyword">Jobs</span> and
        <span class="keyword">Checkers</span>, as long as they have been stored in places known to <strong>Vishnu</strong>.
      </p><p><strong>Vishnu</strong>-<span class="keyword">Jobs</span> and their elements such as <span class="keyword">Checkers</span>
        can be controlled via various parameters in the <span class="keyword">JobDescription.xml</span>.
        A list of parameter settings for jobs and their elements can be found further down in this chapter
        in <a href="#JobParameter">Job parameters</a>.

      </p></div><div class="collapsibleAreaRegion" id="VishnuParameter"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDAB')" onkeypress="SectionExpandCollapse_CheckKey('IDDAB', event)" tabindex="0"><img id="IDDABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Vishnu parameters</span></div><div id="IDDABSection" class="collapsibleSection">
      	<p><strong>Vishnu</strong>-parameters can be set in various ways, as already mentioned at the beginning.
          The following list shows examples of how this should be done.
        </p><ul><li><p><span class="keyword">Command line</span></p><p>
              Parameter transfers to <strong>Vishnu</strong> via the command line always follow the scheme
              <span class="keyword">Vishnu [anonymous parameters] [Vishnu parameters]</span>.
              The square brackets are not entered. They symbolise that the respective parameters are optional,
              i.e. do not have to occur.
            </p><p>
              Example: <span class="keyword">Vishnu "something" -job="DemoJobs\CheckAll"</span></p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />  Note</th></tr><tr><td><p>
                There is also an advanced way to transfer anonymous parameters.
                You can set your parameters via <a href="f724b721-c805-4dbe-8db4-1529c0c68f3d.htm">Custom Parameter Reader</a> control.
                <strong>Vishnu</strong> primarily takes a user-specific parameter reader into account when searching for parameters,
                whose path is defined via the parameter <span class="keyword">UserParameterReaderPath</span>.
              </p></td></tr></table></div></li><li><p><span class="keyword">Vishnu.exe.config.user</span></p><p><a href="9b9475bc-f8a9-4e7a-a84a-373276329b00.htm">Vishnu.exe.config.user</a>
              	is the central configuration file for your own <strong>Vishnu</strong>-Settings.
              	Here you will find some preset parameters. You can change or delete these but also add your own.
              You will find the <span class="keyword">Vishnu.exe.config.user</span> after the first launch of <strong>Vishnu</strong> 
			  			 in the path <span class="keyword">%LOCALAPPDATA%\Vishnu\Vishnu.exe.config.user</span>,
			  			 where <span class="keyword">LOCALAPPDATA</span> is a setting of the Windows environment
              and usually refers to <span class="keyword">C:\Users\&lt;User&gt;\AppData\Local</span>.
            </p><p>
              Example: <span class="keyword">&lt;add key="Job" value="DemoJobs\CheckAll"&gt;</span></p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td><p>
              	The order of the parameters in <a href="9b9475bc-f8a9-4e7a-a84a-373276329b00.htm">Vishnu.exe.config.user</a>
              	is irrelevant. They only need to be within &lt;appSettings&gt; and &lt;/appSettings&gt;.
				</p></td></tr></table></div></li><li><p><span class="keyword">Environment (Windows environment)</span></p><p>
              Example: <span class="keyword">SET Job="DemoJobs\CheckAll"</span></p></li><li><p><span class="keyword">Registry</span>:
              <strong>Vishnu</strong> itself does not use the registry, but supports the storage of parameter settings
              in the path <span class="keyword">RegistryBasePath</span>. <span class="keyword">RegistryBasePath</span>
              is a configurable parameter and is set by default to the registry key
              <span class="keyword">HKEY_LOCAL_MACHINE\SOFTWARE\Vishnu</span>.
              <strong>Vishnu</strong> looks for string values below RegistryBasePath.
            </p><p>
              Example: Key <span class="keyword">HKEY_LOCAL_MACHINE\SOFTWARE\Vishnu\Job</span> with value "DemoJobs\CheckAll"
            </p></li></ul><p>
          In the following list we have made a selection of essential <strong>Vishnu</strong>-parameters for you.
        </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />  Note</th></tr><tr><td><p>
            A complete list of all <strong>Vishnu</strong>-parameters can be found on
            <a href="T_Vishnu_Interchange_AppSettings.htm">Vishnu.Interchange<span id="LST727DEF5D_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>AppSettings</a>.
          </p></td></tr></table></div><ul><li><p><span class="keyword">AppConfigUser</span></p><p>
          	  The <span class="keyword">AppConfigUser</span> parameter specifies the path to the
          	   <a href="9b9475bc-f8a9-4e7a-a84a-373276329b00.htm">Vishnu.exe.config.user</a> file.
          	   This setting should normally not need to be changed.
            </p><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Achtung" />Attention</th></tr><tr><td><p>
                If you ever find yourself needing to change <span class="keyword">AppConfigUser</span>,
                remember that this parameter cannot be defined in
                <a href="9b9475bc-f8a9-4e7a-a84a-373276329b00.htm">Vishnu.exe.config.user</a> itself.
              </p></td></tr></table></div></li><li><p><span class="keyword">Job</span></p><p>
              This parameter can be used to specify the path to the job or to a zip archive
              that contains the job directory (then without the ".zip" extension).
              The path can be specified absolutely or relative to the parent job or to the
              <strong>Vishnu</strong>-installation directory.
              Valid path specifications are, for example, <span class="keyword">DemoJobs\CheckAll</span>
              or <span class="keyword">c:\Users\%UserName%\AppData\Local\Apps\Vishnu\CheckAll</span>.
            </p></li><li><p><span class="keyword">Demo mode</span></p>
            <p>
            	After initial installation, <strong>Vishnu</strong> is started in demo mode with a demo job.
            	This is preset in the <a href="9b9475bc-f8a9-4e7a-a84a-373276329b00.htm">Vishnu.exe.config.user</a>.
            	To get rid of the "-DEMO-" display in the Vishnu window, you can set <span class="keyword">Demo mode</span>
            	to "false" or remove the parameter completely.
            </p></li><li><p><span class="keyword">Autostart</span></p><p>
              If <span class="keyword">Autostart</span> is set to "true", <strong>Vishnu</strong> begins
              processing the jobs immediately after the program starts. This is also the default setting.
            </p></li><li><p><span class="keyword">SingleInstance</span></p><p>
            	
            	This parameter is set to "False" by default. This means that <strong>Vishnu</strong> can be
            	started multiple times on one computer at the same time. If you want <strong>Vishnu</strong>
            	to only start once on one computer, set this parameter to "True". A further attempt to start
            	then only brings the already running Vishnu program (instance) to the foreground.
            </p></li><li><p><span class="keyword">WorkingDirectory</span></p><p><span class="keyword">KillWorkingDirectoryAtShutdown</span></p><p>

              <span class="keyword">WorkingDirectory</span> is the <strong>Vishnu</strong>-Working directory.
              This is where <strong>Vishnu</strong> stores log files and snapshots of its status
              if no other storage directories have been defined for them. The default setting
              is <span class="keyword">%TempDirectory%\Vishnu.%MainJobName%</span>.
            </p><p>
              By default, <strong>Vishnu</strong> leaves the <span class="keyword">WorkingDirectory</span>
              at the end of processing.
              If you want Vishnu to delete the working directory in a final step, you can set
              <span class="keyword">KillWorkingDirectoryAtShutdown</span> to "true".
            </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td>
            <p>
            	Of course, <strong>Vishnu</strong> only deletes directories that were previously created by <strong>Vishnu</strong>.
            </p></td></tr></table></div></li><li><p><span class="keyword">DebugFile</span></p><p>
              The <span class="keyword">DebugFile</span> is the <strong>Vishnu</strong>-log file.
              <strong>Vishnu</strong> writes here all processing errors and, if configured,
              all of its parameters with their origins plus a list of all loaded <span class="keyword">assemblies</span>.
            </p><p>
              All output from any loggers you may have defined also ends up in the <span class="keyword">DebugFile</span>.
            </p><p>
              The <strong>Vishnu</strong>-log file is
              <span class="keyword">%TempDirectory%\Vishnu.%MainJobName%\Vishnu.log</span> by default.
            </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td>
            	<p>
                Further information on <span class="keyword">loggers</span> can be found on
                <a href="bc0ffa08-c936-4fad-8fdb-dbd2279fc360.htm#Logger">Vishnu actors</a>.
              </p></td></tr></table></div></li><li>
              <p><span class="keyword">DumpAppSettings</span></p>
              <p><span class="keyword">DumpLoadedAssemblies</span></p><p>
                As mentioned above, these two parameters can be used for troubleshooting.
              <span class="keyword"><span id="LST727DEF5D_1" data-languageSpecificText="vb=True|nu=true"></span></span> means write to the log file,
              with <span class="keyword"><span id="LST727DEF5D_2" data-languageSpecificText="vb=False|nu=false"></span></span> nothing is logged.
              The default for both parameters is <span class="keyword"><span id="LST727DEF5D_3" data-languageSpecificText="vb=False|nu=false"></span></span>.
            </p></li><li><p><span class="keyword">RegistryBasePath</span></p>
            	<strong>Vishnu</strong> looks for parameters (Key) and their values (Value) in the Windows registry
            	below RegistryBasePath. The default setting is <span class="keyword">HKEY_LOCAL_MACHINE\SOFTWARE\Vishnu</span>.
            </p></li><li><p><span class="keyword">UserAssemblyDirectory</span></p>
            	<p><span class="keyword">UserParameterReaderPath</span></p><p>
            	The <span class="keyword">UserAssemblyDirectory</span> parameter can be used to specify a directory
            	in which <strong>Vishnu</strong> will search for your
            	<a href="a3f9771a-ac24-46c0-97df-d2bde6a990e8.htm">own Checker DLLs</a>,
              <a href="74204d60-cbb3-4f38-8266-aa7af541143f.htm">own UserControls</a> or also
              <a href="f724b721-c805-4dbe-8db4-1529c0c68f3d.htm">your own parameter reader</a>
              in addition to the respective job directories. The default name for this directory
              is <span class="keyword">UserAssemblies</span> and the associated path is usually
              already assigned by <strong>Vishnu</strong> so that you do not have to set the
              <span class="keyword">UserAssemblyDirectory</span> parameter yourself.
              However, any custom parameter reader you have must also be set accordingly using
              the <span class="keyword">UserParameterReaderPath</span> parameter, for example
              to "<span class="keyword">%UserAssemblyDirectory%\DemoParameterProvider.dll</span>".
            </p></li><li><p><span class="keyword">SnapshotDirectory</span></p>
            <p>
            	The <span class="keyword">SnapshotDirectory</span> parameter can be used to set a directory
            	in which Vishnu looks for saved snapshots of <strong>Vishnu</strong>-<span class="keyword">Jobs</span>.
            	The <span class="keyword">SnapshotDirectory</span> is always relative to the current
            	<span class="keyword">Job</span>-Directory and is set to <span class="keyword">"...\Snapshots"</span> by default.
            </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td>
            <p>
               What exactly <span class="keyword">Snapshots</span> are and how they are configured
               is described in a separate chapter entitled <a href="628bbc96-dcd7-4563-a515-5a2edf9ebc10.htm">Snapshots</a>.
            </p></td></tr></table></div></li></ul>
              <div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td>
            <p>
              	The parameter transfer is the same for all parameter settings. You will find a
              	corresponding description at the <a href="#VishnuParameter">Beginning</a> of this section.
            </p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="JobParameter">
            	<span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDEAB')" onkeypress="SectionExpandCollapse_CheckKey('IDEAB', event)" tabindex="0"><img id="IDEABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Job parameters</span>
            </div><div id="IDEABSection" class="collapsibleSection">
            	<p>
                The topmost element of a <strong>Vishnu</strong>-processing is always the <span class="keyword">Job</span>.
                What the job should look like and what it should do is defined in a <span class="keyword">JobDescription.xml</span> file.          
              </p>
              <p>
              	Jobs can be nested as desired. In future we will speak of (main-)<span class="keyword">Job</span>
              	and <span class="keyword">SubJobs</span>, although <strong>Vishnu</strong> treats all jobs equally,
              	especially since a <span class="keyword">SubJob</span> can in turn be the
              	"main-"<span class="keyword">Job</span> for other <span class="keyword">SubJobs</span>.
              </p>
              <p>
              	For an example of a working <span class="keyword">JobDescription.xml</span>, see
              	<a href="c8911ff4-4ce7-406b-8467-e8ddff1ec56c.htm">Inline SubJobs</a>.
              </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td>
              <p>
              	In the <span class="keyword">JobDescription.xml</span>, user parameters unknown
              	to <strong>Vishnu</strong> ("anonymous") can also be forwarded to your
              	<span class="keyword">Checkers</span> or <span class="keyword">Workers</span>.
              	You can read what this is good for and how it works in the chapter
              	<a href="15204f64-ecf7-44b6-822d-74e36b99927d.htm">Vishnu parameter substitution</a>.
              </p></td></tr></table></div>
              <p>
                The following list contains all essential parameters that can be set within a
                <span class="keyword">JobDescription.xml</span>. This applies not only to <span class="keyword">Jobs</span>
                but also to all <span class="keyword">Job</span>-elements such as
                <span class="keyword">Checkers</span>, <span class="keyword">Triggers</span>,
                <span class="keyword">Workers</span> etc.
              </p><table><tr><th>
              <p>Job parameters</p></th><th><p>Structure view</p></th></tr><tr><td><ul><li>
                <p><span class="keyword">LogicalName</span></p><p>
                  All <span class="keyword">Jobs</span>, <span class="keyword">Checkers</span>, <span class="keyword">SubJobs</span>,
                  <span class="keyword">Snapshots</span> and <a href="ac884694-516c-4c98-a2af-d79cc504d0f6.htm">Named Triggers and Loggers</a>
                  have a <span class="keyword">LogicalName</span> that <strong>Vishnu</strong> can use to process them.
                  Additionally, <strong>Vishnu</strong> displays this <span class="keyword">LogicalName</span> on the screen for
                  <span class="keyword">Jobs</span>, <span class="keyword">Snapshots</span>, and <span class="keyword">Checkers</span>.
                </p><p>
                  Example: &lt;LogicalName&gt;Check All&lt;/LogicalName&gt;
                </p><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Achtung" />Attention</th></tr><tr><td>
                <p>
                  This <span class="keyword">LogicalName</span> must be the same as the name under which the node
                  is addressed in the <span class="keyword">LogicalExpression</span> (see below), otherwise
                  <strong>Vishnu</strong> cannot resolve the assignment at runtime.
                  Keep this in mind if you ever want to change a <span class="keyword">LogicalName</span>.
                </p></td></tr></table></div><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td>
                <p>
                  If a <span class="keyword">Job</span> loads another as a <span class="keyword">SubJob</span>,
                  the <span class="keyword">SubJob</span> receives the <span class="keyword">LogicalName</span>
                  with which it is named in the main job. Vishnu takes care of adjusting references in the
                  <span class="keyword">SubJob</span> internally if necessary.
                </p></td></tr></table></div></li><li><p><span class="keyword">LogicalExpression</span></p>
                <p>
                  All <span class="keyword">Jobs</span> and <span class="keyword">SubJobs</span> are described
                  using a <span class="keyword">LogicalExpression</span>. You use the <span class="keyword">LogicalExpression</span>
                  to determine how the <span class="keyword">Job's</span> nodes relate to each other and what
                  structure the <span class="keyword">Job</span> ultimately has on the screen.
                  <br />
                </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td>
                <p><span class="keyword">LogicalExpressions</span> can be formulated in two slightly different ways,
                  see the following example:
                </p><ol><li>
                	<p>
                  &lt;LogicalExpression&gt;(Google AND Heise) AND (Local OR Local_Backup)&lt;/LogicalExpression&gt;
                  </p></li><li><p>
                  &lt;LogicalExpression&gt;&lt;![CDATA[(Google AND Heise) AND (Local OR Local_Backup)]]&gt;&lt;/LogicalExpression&gt;
                  </p></li></ol><p>
                      The second form, in which the logical expression is additionally enclosed in "&lt;![CDATA[" und "]]&gt;",
                      has the advantage that special characters may also appear in the logical expression.
                      This makes it possible, to write <span class="keyword">Operators</span> in their short form.
                      Details are provided in the chapter <a href="0e4f7c52-ffb4-4ea3-9ab6-40f24b47373d.htm">Vishnu Logic</a>.
                    </p></td></tr></table></div></li><li>
                  <p><span class="keyword">PhysicalPath</span></p><p>
                    Each <span class="keyword">Job</span> is found via its <span class="keyword">PhysicalPath</span>.
                    The <span class="keyword">PhysicalPath</span> does not belong to the job definition itself,
                    but must be set outside of the <span class="keyword">JobDescription.xml</span> at the moment
                    of loading. For a main job, this is controlled via the Vishnu parameter
                    <span class="keyword">Job</span>&semi; for <span class="keyword">SubJobs</span>,
                    the <span class="keyword">PhysicalPath</span> must be set in the
                    <span class="keyword">JobDescription.xml</span> of the loading, parent <span class="keyword">Job</span>.
                  </p><p><span class="keyword">Checkers</span>,<span class="keyword">Triggers</span>,
                    <span class="keyword">Loggers</span>, <span class="keyword">Workers</span>
                    and <span class="keyword">ValueModifiers</span> are also loaded via
                    the <span class="keyword">PhysicalPath</span>, provided they do not reference another node or
                    <span class="keyword">TreeEvents</span> (see
                    also <a href="ac884694-516c-4c98-a2af-d79cc504d0f6.htm">Named Triggers and Loggers</a>
                    and <a href="28fdc0c4-7fdc-4d16-be94-94cee2a9ca85.htm">TreeEvents</a>).
                  </p><p>
                    Example: &lt;PhysicalPath&gt;..\SubJob&lt;/PhysicalPath&gt;<br /></p><p /></li><li>
                  <p><span class="keyword">Parameters</span></p><p>
                    The <strong>Parameters</strong> section is used to store transfer-parameters for your own
                     <span class="keyword">Checkers, Triggers, Workers or Loggers</span> in the
                     <span class="keyword">JobDescription.xml</span>. <strong>Vishnu</strong> then passes
                     these parameters to your own <span class="keyword">Checkers, Triggers, Workers or Loggers</span>
                     later when you call them.
                  </p><p>
                    The form and syntax of the transferred parameters is not fixed. You are completely
                    free to determine this. The only important thing is that your own element (DLL)
                    understands the format that you have stored in the <span class="keyword">JobDescription.xml</span>.
                  </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td>
                  <p>
                  	As with <span class="keyword">LogicalExpression</span>, parameters can be passed
                  	in the extended format, such as the following for a worker:
                    &lt;Parameters&gt;&lt;![CDATA[Fehler|%Timestamp%: %MachineName% MyChecker %Event% of %Source% in %Sender%]]&gt;&lt;/Parameters&gt;
                    </p></td></tr></table></div></li><li>
                  <p><span class="keyword">Reference</span></p><p>
                  	In special cases, <strong>Reference</strong> is used to refer to other <strong>Vishnu</strong>-elements.
                  </p><p>
                  	The most common use case is certainly with <span class="keyword">ValueModifiers</span>.
                  	Here, the checker whose <span class="keyword">Result</span> is to be modified is specified
                  	using &lt;Reference&gt;Checkername&lt;/Reference&gt;. Examples of this
                  	can be found on <a href="bc0ffa08-c936-4fad-8fdb-dbd2279fc360.htm#ValueModifier">Vishnu actors</a>
                    and <a href="b2bd8510-a131-4466-9fac-66f2033d92a0.htm">Custom ValueModifiers</a>.
                  </p><p>
                    Another application can be found at <span class="keyword">Trigger-</span> and
                    <span class="keyword">Logger-</span>assignments, which reference previously defined triggers
                    and loggers (See also <a href="ac884694-516c-4c98-a2af-d79cc504d0f6.htm">Named Triggers and Loggers</a>).
                  </p><p /></li><li><p><span class="keyword">StartCollapsed</span></p><p>
                    All <span class="keyword">Jobs</span> are displayed in expanded state by default, i.e.
                    Sub-elements such as <span class="keyword">Checkers</span> or <span class="keyword">SubJobs</span>
                    are visible at first. To change this behaviour, you can set <span class="keyword">StartCollapsed</span>
                    to <strong>true</strong>.
                  </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td>
                  <p>
                    You have even more extensive options by saving the current arrangement of a
                    <strong>Vishnu</strong>-Tree at runtime,
                    see <a href="6fe3bf85-d02b-41ff-84a7-dcc2a4819978.htm">Vishnu Control</a>.
                    Incidentally, the display can be saved individually on each workstation.
                    </p></td></tr></table></div></li><li>
                  <p><span class="keyword">ThreadLocked</span></p><p><span class="keyword">LockName</span>
                  </p><p><strong>Vishnu</strong> works in a highly parallel manner, i.e. all elements such as
                    <span class="keyword">Checkers</span>, <span class="keyword">Triggers</span> etc.
                    can work simultaneously. <strong>Vishnu</strong> is designed for this from the outset (threadsafe).
                    However, a <span class="keyword">Checker</span>-type you have created may run into problems
                    if several similar checkers are configured in a tree and are running at the same time.                    
                  </p><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Achtung" /> Attention</th></tr><tr><td>
                  <p>
                  	The errors that may then occur can be very unpleasant and difficult to detect.<br />
                    In such a situation, set the <strong>ThreadLocked</strong> switch to <strong>true</strong>
                    at the <span class="keyword">Job</span>-level or <span class="keyword">Checker</span>-level.
                    <strong>Vishnu</strong> then ensures that <span class="keyword">Checkers</span> marked in
                    this way are executed one after the other and not simultaneously.
                    In order to be able to handle different <span class="keyword">Checker</span>-types
                    in a differentiated manner, use the optional additional attribute <strong>Lockname</strong>.<br />
                    Here is an example: <strong>&lt;ThreadLocked LockName="ConcurrentSQL"&gt;true&lt;/ThreadLocked&gt;</strong></p></td></tr></table></div></li><li>
		              <p><span class="keyword">UserControlPath</span></p><p><span class="keyword">JobListUserControlPath</span></p>
		              <p><span class="keyword">NodeListUserControlPath</span></p><p><span class="keyword">SingleNodeUserControlPath</span></p>
		              <p><span class="keyword">ConstantNodeUserControlPath</span></p><p><span class="keyword">JobConnectorUserControlPath</span></p>
		              <p><span class="keyword">SnapshotUserControlPath</span></p><p>
                    The settings summarised here are all used to define alternative representations
                    (<span class="keyword">Views</span>) of <strong>Vishnu</strong>-elements.
                    With their help you can optionally specify relative paths to your own <span class="keyword">Views</span> (DLLs).
                  </p><p>
                    The parameter <strong>UserControlPath</strong> only refers to the element,
                    for which it is set in the <span class="keyword">JobDescription.xml</span>.
                    The other parameters can be set at <span class="keyword">Job</span>-level
                    and then apply to all subordinate elements of the type contained in the name of the parameter
                    (JobList, NodeList, SingleNode, ConstantNode, JobConnector, Snapshot).<br />
                    The parameter <strong>SingleNodeUserControlPath</strong> also determines the appearance
                    of <span class="keyword">ValueModifiers</span> and <span class="keyword">NodeConnectors</span>.
                  </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />Note</th></tr><tr><td><p>
                      See also <a href="62ca75a8-ba50-4115-93df-b1e76bf6e5f7.htm">A simple Example</a> and
                      <a href="74204d60-cbb3-4f38-8266-aa7af541143f.htm">Custom Views</a>.
                    </p></td></tr></table></div></li></ul></td><td><p>
                  Job<br />
                      LogicalName<br />
                      LogicalExpression<br />
                      PhysicalPath<br />
                      StartCollapsed<br />
                      ThreadLocked<br />
                          LockName<br />
                      JobTrigger<br />
                          Reference<br />
                          PhysicalPath<br />
                          Parameters<br />
                      JobSnapshotTrigger<br />
                          Parameters<br />
                          Reference<br />
                          PhysicalPath<br />
                      JobLogger<br />
                          Reference<br />
                          PhysicalPath<br />
                          Parameters<br />
                      UserControlPath<br />
                      JobListUserControlPath<br />
                      SnapshotUserControlPath<br />
                      NodeListUserControlPath<br />
                      JobConnectorUserControlPath<br />
                      SingleNodeUserControlPath<br />
                      ConstantNodeUserControlPath<br />
                      Checkers<br />
                          Checker<br />
                              LogicalName<br />
                              PhysicalPath<br />
                              Parameters<br />
                              IsMirror<br />
                              Trigger<br />
                                  Reference<br />
                                  PhysicalPath<br />
                                  Parameters<br />
                              Logger<br />
                                  Reference<br />
                                  PhysicalPath<br />
                                  Parameters<br />
                              UserControlPath<br />
                              SingleNodeUserControlPath<br />
                              ThreadLocked<br />
                                  LockName<br />
                              IsGlobal<br />
                              CanRunDllPath<br />
                      ValueModifiers<br />
                          ValueModifier<br />
                              LogicalName<br />
                              Reference<br />
                              PhysicalPath<br />
                              Format<br />
                              Type<br />
                              IsGlobal<br />
                              UserControlPath<br />
                              SingleNodeUserControlPath<br />
                      Triggers<br />
                          Trigger<br />
                              LogicalName<br />
                              Reference<br />
                              PhysicalPath<br />
                              Parameters<br />
                      Loggers<br />
                          Logger<br />
                              LogicalName<br />
                              PhysicalPath<br />
                              Parameters<br />
                      Workers<br />
                          Worker<br />
                              LogicalExpression<br />
                              SubWorkers    <br />
                                  SubWorker<br />
                                      PhysicalPath<br />
                                      Parameters<br />
                                      Trigger<br />
                                          Reference<br />
                                          PhysicalPath<br />
                                          Parameters<br />
                      SubJobs<br />
                          SubJob<br />
                              LogicalName<br />
                              PhysicalPath<br />
                              StartCollapsed<br />
                              (Recursion job)            <br />
                      Snapshots<br />
                          Snapshot<br />
                              LogicalName<br />
                              PhysicalPath<br />
                              StartCollapsed<br /></p></td></tr></table></div><div class="collapsibleAreaRegion" id="sieheAuch"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFAB')" onkeypress="SectionExpandCollapse_CheckKey('IDFAB', event)" tabindex="0"><img id="IDFABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />see also</span></div><div id="IDFABSection" class="collapsibleSection"><p /><ul><li><p><a href="bc0ffa08-c936-4fad-8fdb-dbd2279fc360.htm">Vishnu actors</a></p></li><li><p><a href="c8911ff4-4ce7-406b-8467-e8ddff1ec56c.htm">Inline SubJobs</a></p></li><li><p><a href="1ccf9fe4-94f8-49ff-9234-506c5ad9daa7.htm">Advanced Topics</a></p></li><li><p><a href="R_Project_Vishnu_doc_de.htm">Vishnu - technical Documentation</a></p></li></ul></div></div></div><div id="PageFooter" class="pageFooter">Naturally, many findings and developments are based on information freely available on the Internet. Any missing references to original authors are unintentional and will be updated as soon as they are reported.<p>Copyright © 2012-2024 Erik Nagel</p><div class="feedbackLink">Send comments about this feature to
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback will be used to improve the documentation and the product. Your email address will not be used for any other purpose and will be deleted after the reported issue has been resolved. While working on the problem, you may be contacted by email for further details or clarification of your feedback. After the problem has been isolated, you may receive an email to resolve the issue.");
        </script></div></body></html>