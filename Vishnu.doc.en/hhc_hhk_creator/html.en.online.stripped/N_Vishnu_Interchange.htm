<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-US" /><meta name="Microsoft.Help.Locale" content="en-US" /><meta name="Microsoft.Help.TopicLocale" content="en-US" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>Vishnu.Interchange namespace</title><meta name="Title" content="Vishnu.Interchange" /><meta name="Microsoft.Help.Id" content="N:Vishnu.Interchange" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="Vishnu.Interchange namespace" /><meta name="Microsoft.Help.F1" content="Vishnu.Interchange" /><meta name="container" content="Vishnu.Interchange" /><meta name="file" content="N_Vishnu_Interchange" /><meta name="guid" content="N_Vishnu_Interchange" /><meta name="Description" content="Definitions, interfaces and classes that are used in user elements" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/ad9ee8b6-c68c-47ec-9584-d85046eb3137.htm" title="Vishnu - the logical process monitor" tocid="roottoc">Vishnu - the logical process monitor</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Vishnu_doc_de.htm" title="Vishnu - technische Dokumentation" tocid="R_Project_Vishnu_doc_de">Vishnu - technical Documentation</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Vishnu_Interchange.htm" title="Vishnu.Interchange" tocid="N_Vishnu_Interchange">Vishnu.Interchange</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_AppSettings.htm" title="AppSettings class" tocid="T_Vishnu_Interchange_AppSettings">AppSettings class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Vishnu_Interchange_DialogSettings.htm" title="DialogSettings Enumeration" tocid="T_Vishnu_Interchange_DialogSettings">DialogSettings Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_GenericPropertyGetter.htm" title="GenericPropertyGetter class" tocid="T_Vishnu_Interchange_GenericPropertyGetter">GenericPropertyGetter class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_IBusinessLogicRoot.htm" title="IBusinessLogicRoot interface" tocid="T_Vishnu_Interchange_IBusinessLogicRoot">IBusinessLogicRoot interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_ICanRun.htm" title="ICanRun interface" tocid="T_Vishnu_Interchange_ICanRun">ICanRun interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_IExpandableNode.htm" title="IExpandableNode interface" tocid="T_Vishnu_Interchange_IExpandableNode">IExpandableNode interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_INodeChecker.htm" title="INodeChecker interface" tocid="T_Vishnu_Interchange_INodeChecker">INodeChecker interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_INodeLogger.htm" title="INodeLogger interface" tocid="T_Vishnu_Interchange_INodeLogger">INodeLogger interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_INodeTrigger.htm" title="INodeTrigger interface" tocid="T_Vishnu_Interchange_INodeTrigger">INodeTrigger interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_INodeWorker.htm" title="INodeWorker interface" tocid="T_Vishnu_Interchange_INodeWorker">INodeWorker interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_IParameterReader.htm" title="IParameterReader interface" tocid="T_Vishnu_Interchange_IParameterReader">IParameterReader interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_IValueModifier.htm" title="IValueModifier interface" tocid="T_Vishnu_Interchange_IValueModifier">IValueModifier interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_IViewModelRoot.htm" title="IViewModelRoot interface" tocid="T_Vishnu_Interchange_IViewModelRoot">IViewModelRoot interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_IVishnuJobProvider.htm" title="IVishnuJobProvider interface" tocid="T_Vishnu_Interchange_IVishnuJobProvider">IVishnuJobProvider interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_IVishnuNode.htm" title="IVishnuNode interface" tocid="T_Vishnu_Interchange_IVishnuNode">IVishnuNode interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_IVishnuViewModel.htm" title="IVishnuViewModel interface" tocid="T_Vishnu_Interchange_IVishnuViewModel">IVishnuViewModel interface</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Vishnu_Interchange_NodeLogicalState.htm" title="NodeLogicalState Enumeration" tocid="T_Vishnu_Interchange_NodeLogicalState">NodeLogicalState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Vishnu_Interchange_NodeState.htm" title="NodeState Enumeration" tocid="T_Vishnu_Interchange_NodeState">NodeState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Vishnu_Interchange_NodeTypes.htm" title="NodeTypes Enumeration" tocid="T_Vishnu_Interchange_NodeTypes">NodeTypes Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Vishnu_Interchange_NodeWorkerState.htm" title="NodeWorkerState Enumeration" tocid="T_Vishnu_Interchange_NodeWorkerState">NodeWorkerState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Vishnu_Interchange_OrientationSwitch.htm" title="OrientationSwitch Enumeration" tocid="T_Vishnu_Interchange_OrientationSwitch">OrientationSwitch Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_Result.htm" title="Result class" tocid="T_Vishnu_Interchange_Result">Result class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_ResultDictionary.htm" title="ResultDictionary class" tocid="T_Vishnu_Interchange_ResultDictionary">ResultDictionary class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_TreeEvent.htm" title="TreeEvent class" tocid="T_Vishnu_Interchange_TreeEvent">TreeEvent class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Vishnu_Interchange_TreeOrientation.htm" title="TreeOrientation Enumeration" tocid="T_Vishnu_Interchange_TreeOrientation">TreeOrientation Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_TreeParameters.htm" title="TreeParameters class" tocid="T_Vishnu_Interchange_TreeParameters">TreeParameters class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_TriggerBase.htm" title="TriggerBase class" tocid="T_Vishnu_Interchange_TriggerBase">TriggerBase class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Vishnu_Interchange_TriggeredNodeStartConstraint.htm" title="TriggeredNodeStartConstraint Enumeration" tocid="T_Vishnu_Interchange_TriggeredNodeStartConstraint">TriggeredNodeStartConstraint Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_TriggerInfo.htm" title="TriggerInfo class" tocid="T_Vishnu_Interchange_TriggerInfo">TriggerInfo class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_UndefinedTreeEventClass.htm" title="UndefinedTreeEventClass class" tocid="T_Vishnu_Interchange_UndefinedTreeEventClass">UndefinedTreeEventClass class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_VishnuAssemblyLoader.htm" title="VishnuAssemblyLoader class" tocid="T_Vishnu_Interchange_VishnuAssemblyLoader">VishnuAssemblyLoader class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Vishnu_Interchange_WindowAspects.htm" title="WindowAspects class" tocid="T_Vishnu_Interchange_WindowAspects">WindowAspects class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>Vishnu.<wbr />Interchange namespace</h1></td></tr></table><div class="summary">Definitions, interfaces and classes that are used in user elements</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDACA')" onkeypress="SectionExpandCollapse_CheckKey('IDACA', event)" tabindex="0"><img id="IDACAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="IDACASection" class="collapsibleSection"><table id="classList" class="members"><tr><th class="iconColumn"> </th><th>Class</th><th>Description of the</th></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_Vishnu_Interchange_AppSettings.htm">AppSettings</a></td><td>
             Inherits generally valid settings from BasicAppSettings or settings derived from it.
             classes and adds application-specific properties.
             Retrieves application settings from various sources:
             Command line, Vishnu.exe.config (app.config), Vishnu.exe.config.user, Environment, Registry.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_Vishnu_Interchange_GenericPropertyGetter.htm">GenericPropertyGetter</a></td><td>
             Retrieves properties from a previously serialized class,
             where a typecast (to the same class) does not work.
             Is required for customised classes that are created within a Vishnu tree.
             are to be used as a ReturnObject and are to be defined via the environment
             are to be used by nodes other than the generator.
             Occurs when assemblies are loaded deserialized on the one hand,
             on the other hand in dynamically loaded assemblies for their
             Compile time were referenced.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_Vishnu_Interchange_Result.htm">Result</a></td><td>
             Records the results of a node of the LogicalTaskTree.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_Vishnu_Interchange_ResultDictionary.htm">ResultDictionary</a></td><td>
            Typed list of results.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_Vishnu_Interchange_TreeEvent.htm">TreeEvent</a></td><td>
             Class with various information for events in the LogicalTaskTree.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_Vishnu_Interchange_TreeParameters.htm">TreeParameters</a></td><td>
             Parameters that Checkern receives with every call
             are given by Vishnu (not user-specific).
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_Vishnu_Interchange_TriggerBase.htm">TriggerBase</a></td><td>
             Base class for specific triggers - must be derived.
             Triggers the 'triggerIt' event depending on the respective implementation.
             Implements the interface 'INodeTrigger' from 'Vishnu.Interchange.dll', via
             which the LogicalTaskTree of 'Vishnu' hooks into the event and activates the trigger
             can start and stop.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_Vishnu_Interchange_TriggerInfo.htm">TriggerInfo</a></td><td>
             Contains information on the owning trigger.
             NextRun is implemented. To add further
             information, this class can be derived.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_Vishnu_Interchange_UndefinedTreeEventClass.htm">UndefinedTreeEventClass</a></td><td>
            Class definition for an undefined TreeEvent.
            Replaces null to avoid the miserable null warnings when using TreeEvents
            to circumvent the provisions for which it is or must be ensured that at the time of
            of the usage are not equal to zero, but which are not yet used in the constructor.
            could be instantiated in a meaningful way.
            For any subsequent null queries, null must be replaced by the static instance
            'UndefinedTreeEvent' (see below).
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_Vishnu_Interchange_VishnuAssemblyLoader.htm">VishnuAssemblyLoader</a></td><td>
             Provides methods for the dynamic loading of
             Assemblies and the instantiation of classes contained therein
             available.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_Vishnu_Interchange_WindowAspects.htm">WindowAspects</a></td><td>
             Function: Data class with essential display features of a WPF window.
             </td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDKCA')" onkeypress="SectionExpandCollapse_CheckKey('IDKCA', event)" tabindex="0"><img id="IDKCAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Interfaces</span></div><div id="IDKCASection" class="collapsibleSection"><table id="interfaceList" class="members"><tr><th class="iconColumn"> </th><th>Interface</th><th>Description of the</th></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_Vishnu_Interchange_IBusinessLogicRoot.htm">IBusinessLogicRoot</a></td><td>
            Defines methods for accessing the topmost JobList of the tree.
            Is used internally when merging changed jobs after a reload.
            </td></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_Vishnu_Interchange_ICanRun.htm">ICanRun</a></td><td>
             Provides the function 'bool CanRun(...)'.
             </td></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_Vishnu_Interchange_IExpandableNode.htm">IExpandableNode</a></td><td>
             Defines the necessary properties of an expandable, respectively
             collapsible node in a tree (from the point of view of the ConfigurationManager class).
             </td></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_Vishnu_Interchange_INodeChecker.htm">INodeChecker</a></td><td>
            A class that is used as a test process in an end node of a
            LogicalTaskTree must implement this interface.
            </td></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_Vishnu_Interchange_INodeLogger.htm">INodeLogger</a></td><td>
             Interface for a class that contains logging information
             can accept and process.
             </td></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_Vishnu_Interchange_INodeTrigger.htm">INodeTrigger</a></td><td>
             Interface for a class that can trigger a process multiple times,
             e.g. TimerTrigger or FileWatcherTrigger.
             </td></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_Vishnu_Interchange_INodeWorker.htm">INodeWorker</a></td><td>
            A class that is used as a worker process (action for TreeEvent, e.g. logical change)
            should work in an end node of a LogicalTaskTree,
            must implement this interface.
            </td></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_Vishnu_Interchange_IParameterReader.htm">IParameterReader</a></td><td>
             Interface for classes that have parameter values
             (string-&gt;string).
             </td></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_Vishnu_Interchange_IValueModifier.htm">IValueModifier</a></td><td>
             Helper for a ValueModifier; converts a value
             to a different value and/or format.
             </td></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_Vishnu_Interchange_IViewModelRoot.htm">IViewModelRoot</a></td><td>
            Defines methods for accessing the top JobListViewModel of the tree.
            Is used internally when merging changed jobs after a reload.
            </td></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_Vishnu_Interchange_IVishnuJobProvider.htm">IVishnuJobProvider</a></td><td>
             Interface for a class that converts a foreign format into an XDocument
             converted and returned in Vishnu job format.
             </td></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_Vishnu_Interchange_IVishnuNode.htm">IVishnuNode</a></td><td>
             Provides informative access to a LogicalNode from Vishnu.
             </td></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_Vishnu_Interchange_IVishnuViewModel.htm">IVishnuViewModel</a></td><td>
            Interface for the ViewModels of dynamic user controls.
            </td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBCA')" onkeypress="SectionExpandCollapse_CheckKey('IDBCA', event)" tabindex="0"><img id="IDBCAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enumerations</span></div><div id="IDBCASection" class="collapsibleSection"><table id="enumerationList" class="members"><tr><th class="iconColumn"> </th><th>Enumeration</th><th>Description of the</th></tr><tr><td><img src="../icons/pubEnumeration.gif" alt="Public Enumeration" title="Public Enumeration" /></td><td><a href="T_Vishnu_Interchange_DialogSettings.htm">DialogSettings</a></td><td>
            Switch for dialogue behaviour.
            The specific form of the dialogues is determined in the respective application situation:
            None: no dialogue,
            Info: A message is displayed that can only be confirmed.
            Question: A message is displayed in which a selection can be made (usually Yes/No).
            </td></tr><tr><td><img src="../icons/pubEnumeration.gif" alt="Public Enumeration" title="Public Enumeration" /></td><td><a href="T_Vishnu_Interchange_NodeLogicalState.htm">NodeLogicalState</a></td><td>
            Result states of a node.
            </td></tr><tr><td><img src="../icons/pubEnumeration.gif" alt="Public Enumeration" title="Public Enumeration" /></td><td><a href="T_Vishnu_Interchange_NodeState.htm">NodeState</a></td><td>
            Processing states of a node.
            </td></tr><tr><td><img src="../icons/pubEnumeration.gif" alt="Public Enumeration" title="Public Enumeration" /></td><td><a href="T_Vishnu_Interchange_NodeTypes.htm">NodeTypes</a></td><td>
            Combinable type list of the end nodes of the tree.
            </td></tr><tr><td><img src="../icons/pubEnumeration.gif" alt="Public Enumeration" title="Public Enumeration" /></td><td><a href="T_Vishnu_Interchange_NodeWorkerState.htm">NodeWorkerState</a></td><td>
            Status of any assigned workers (None, Valid, Invalid).
            </td></tr><tr><td><img src="../icons/pubEnumeration.gif" alt="Public Enumeration" title="Public Enumeration" /></td><td><a href="T_Vishnu_Interchange_OrientationSwitch.htm">OrientationSwitch</a></td><td>
            Changes the alignment when displaying the elements in the respective control.
            </td></tr><tr><td><img src="../icons/pubEnumeration.gif" alt="Public Enumeration" title="Public Enumeration" /></td><td><a href="T_Vishnu_Interchange_TreeOrientation.htm">TreeOrientation</a></td><td>
            Determines the alignment of the elements in the tree.
            </td></tr><tr><td><img src="../icons/pubEnumeration.gif" alt="Public Enumeration" title="Public Enumeration" /></td><td><a href="T_Vishnu_Interchange_TriggeredNodeStartConstraint.htm">TriggeredNodeStartConstraint</a></td><td>
            Start behaviour of triggered nodes
            when started by the user (UserRun):
              None = no direct start,
              All = all triggered nodes within
                     of a (partial) tree started by UserRun start directly
                     (like non-triggered nodes),
              Direct = all triggered nodes start directly when they themselves
                     were started by UserRun.
              NoTreeEvents = everything else does not apply to nodes triggered by TreeEvents.
            </td></tr></table></div></div></div><div id="PageFooter" class="pageFooter">Naturally, many findings and developments are based on information freely available on the Internet. Any missing references to original authors are unintentional and will be updated as soon as they are reported.<p>Copyright © 2012-2025 Erik Nagel</p><div class="feedbackLink">Send comments about this feature to
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback will be used to improve the documentation and the product. Your email address will not be used for any other purpose and will be deleted after the reported issue has been resolved. While working on the problem, you may be contacted by email for further details or clarification of your feedback. After the problem has been isolated, you may receive an email to resolve the issue.");
        </script></div></body></html>