<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="de-de" /><meta name="Microsoft.Help.Locale" content="de-de" /><meta name="Microsoft.Help.TopicLocale" content="de-de" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-de-DE.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>WorkerShell Klasse</title><meta name="Title" content="WorkerShell Klasse" /><meta name="Microsoft.Help.Id" content="T:LogicalTaskTree.WorkerShell" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="LogicalTaskTree.WorkerShell Klasse" /><meta name="System.Keywords" content="WorkerShell Klasse" /><meta name="Microsoft.Help.F1" content="LogicalTaskTree.WorkerShell" /><meta name="Microsoft.Help.F1" content="WorkerShell" /><meta name="container" content="LogicalTaskTree" /><meta name="file" content="T_LogicalTaskTree_WorkerShell" /><meta name="guid" content="T_LogicalTaskTree_WorkerShell" /><meta name="Description" content="Kapselt den Aufruf einer externen Arbeitsroutine, die als Reaktion auf eine definierte Änderung des Tree-Zustands (TreeEvent) als externe Exe ausgeführt wird (fire and forget) TODO: später eventuell auch als lightweight Dll-Plugin realisieren." /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Vishnu - der logische Prozess-Monitor<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/ad9ee8b6-c68c-47ec-9584-d85046eb3137.htm" title="Vishnu - der logische Prozess-Monitor" tocid="roottoc">Vishnu - der logische Prozess-Monitor</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Vishnu_doc_de.htm" title="Vishnu - technische Dokumentation" tocid="R_Project_Vishnu_doc_de">Vishnu - technische Dokumentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_LogicalTaskTree.htm" title="LogicalTaskTree" tocid="N_LogicalTaskTree">LogicalTaskTree</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_LogicalTaskTree_WorkerShell.htm" title="WorkerShell Klasse" tocid="T_LogicalTaskTree_WorkerShell">WorkerShell Klasse</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_LogicalTaskTree_WorkerShell__ctor.htm" title="WorkerShell Konstruktor" tocid="Overload_LogicalTaskTree_WorkerShell__ctor">WorkerShell Konstruktor</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_LogicalTaskTree_WorkerShell.htm" title="WorkerShell Eigenschaften" tocid="Properties_T_LogicalTaskTree_WorkerShell">WorkerShell Eigenschaften</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_LogicalTaskTree_WorkerShell.htm" title="WorkerShell Methoden" tocid="Methods_T_LogicalTaskTree_WorkerShell">WorkerShell Methoden</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>Worker<wbr />Shell Klasse</h1></td></tr></table><div class="summary">
             Kapselt den Aufruf einer externen Arbeitsroutine,
             die als Reaktion auf eine definierte Änderung des Tree-Zustands
             (TreeEvent) als externe Exe ausgeführt wird (fire and forget)
             TODO: später eventuell auch als lightweight Dll-Plugin realisieren.
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDA', event)" tabindex="0"><img id="IDDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Vererbungshierarchie</span></div><div id="IDDASection" class="collapsibleSection"><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST6A8E2E77_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Object</a><br />  <a href="T_LogicalTaskTree_NodeShellBase.htm">LogicalTaskTree<span id="LST6A8E2E77_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>NodeShellBase</a><br />    <span class="selflink">LogicalTaskTree<span id="LST6A8E2E77_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>WorkerShell</span><br /></div><br /><strong>Namensraum:</strong> <a href="N_LogicalTaskTree.htm">LogicalTaskTree</a><br /><strong>Assembly:</strong> LogicalTaskTree (in LogicalTaskTree.dll) Version: 1.0.0+d75bac576d44afb64cfff79fd3665c8ca1172cbc<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">WorkerShell</span> : <span class="identifier">NodeShellBase</span>, 
	<span class="identifier">INodeWorker</span></pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">WorkerShell</span>
	<span class="keyword">Inherits</span> <span class="identifier">NodeShellBase</span>
	<span class="keyword">Implements</span> <span class="identifier">INodeWorker</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">WorkerShell</span> : <span class="keyword">public</span> <span class="identifier">NodeShellBase</span>, 
	<span class="identifier">INodeWorker</span></pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">WorkerShell</span> = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">NodeShellBase</span>
        <span class="keyword">interface</span> <span class="identifier">INodeWorker</span>
    <span class="keyword">end</span></pre></div></div></div></div><p>Der <span class="selflink">WorkerShell</span> Typ exponiert die folgenden Member.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDABFA')" onkeypress="SectionExpandCollapse_CheckKey('IDABFA', event)" tabindex="0"><img id="IDABFAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Konstruktoren</span></div><div id="IDABFASection" class="collapsibleSection"><table id="ConstructorList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Beschreibung</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_WorkerShell__ctor.htm">WorkerShell(String, XElement)</a></td><td>
            Konstruktor - übernimmt den Pfad zur Worker-Exe, und einen Parameter-String, der beim
            Aufruf der Exe zusätzlich übergeben wird. Der Parameter-String kann neben beliebigen, durch
            die Programm-Session auflösbaren Platzhaltern folgende Platzhalter
            enthalten, die beim Aufruf der Worker-Exe durch aktuelle Laufzeit-Werte ersetzt werden:
              "%Event%" = Name des Ereignisses, das zum Aufruf des Workers geführt hat,
              "%Source%" = Quelle des Ereignisses (Knoten, in dem das Ereignis zuerst aufgetreten ist),
              "%Sender%" = Knoten, der aufgrund des Ereigniss aktuell den Worker aufruft,
              "%Timestamp%" = aktuelles Datum mit aktueller Uhrzeit im Format "dd.MM.yyyy HH.mm.ss",
              "%Logical%" = aktueller logischer Wert des Senders,
              "%Exception%" = Exception.Message, falls %Event% gleich "Exception" ist, ansonsten "".
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_WorkerShell__ctor_1.htm">WorkerShell(String, XElement, Boolean, INodeTrigger)</a></td><td>
            Konstruktor - übernimmt den Pfad zur Worker-Exe, und einen Parameter-String, der beim
            Aufruf der Exe zusätzlich übergeben wird. Optional kann zusätzlich ein Trigger übergeben werden,
            der einen einmal aktivierten Worker, wiederholt aufruft.
            Der Parameter-String kann neben beliebigen, durch die Programm-Session auflösbaren Platzhaltern
            folgende Platzhalter enthalten, die beim Aufruf der Worker-Exe durch aktuelle Laufzeit-Werte
            ersetzt werden:
              "%Event%" = Name des Ereignisses, das zum Aufruf des Workers geführt hat,
              "%Source%" = Quelle des Ereignisses (Knoten, in dem das Ereignis zuerst aufgetreten ist),
              "%Sender%" = Knoten, der aufgrund des Ereigniss aktuell den Worker aufruft,
              "%Timestamp%" = aktuelles Datum mit aktueller Uhrzeit im Format "dd.MM.yyyy HH.mm.ss",
              "%Logical%" = aktueller logischer Wert des Senders,
              "%Exception%" = Exception.Message, falls %Event% gleich "Exception" ist, ansonsten "".
            </td></tr></table><a href="#PageHeader">Zurück nach oben</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFFA')" onkeypress="SectionExpandCollapse_CheckKey('IDFFA', event)" tabindex="0"><img id="IDFFAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Eigenschaften</span></div><div id="IDFFASection" class="collapsibleSection"><table id="PropertyList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Beschreibung</th></tr><tr><td><img src="../icons/protProperty.gif" alt="Protected Eigenschaft" title="Protected Eigenschaft" /></td><td><a href="P_LogicalTaskTree_NodeShellBase_CanRunDll.htm">CanRunDll</a></td><td>
            Dll mit der Instanz von ICanRun. Wenn vorhanden, wird CanRun vor jedem Start
            eines Knotens aufgerufen. Liefert CanRun false zurück, wir der Start abgebrochen.
            In CanRun können darüber hinaus die per ref übergebenen Parameter noch
            modifiziert werden.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeShellBase.htm">NodeShellBase</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public Eigenschaft" title="Public Eigenschaft" /></td><td><a href="P_LogicalTaskTree_NodeShellBase_CanRunDllPath.htm">CanRunDllPath</a></td><td>
            Pfad zu einer optionalen Dll, die eine ICanRun-Instanz zur Verfügung stellt.
            Wenn vorhanden, wird vor jedem Run des zugehörigen Checkers oder Workers
            CanRun aufgerufen. Liefert CanRun false zurück, wird der Start abgebrochen.
            Zusätzlich können in CanRun die übergebenen Parameter noch modifiziert werden.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeShellBase.htm">NodeShellBase</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public Eigenschaft" title="Public Eigenschaft" /></td><td><a href="P_LogicalTaskTree_WorkerShell_SlavePathName.htm">SlavePathName</a></td><td>
            Die bei Änderung des Zustands von Logical aufzurufende Exe.
            </td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public Eigenschaft" title="Public Eigenschaft" /></td><td><a href="P_LogicalTaskTree_WorkerShell_TransportByFile.htm">TransportByFile</a></td><td>
            Bei True werden die Parameter über eine XML-Datei übergeben, ansonsten über die Kommandozeile;
            Default: false.
            </td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public Eigenschaft" title="Public Eigenschaft" /></td><td><a href="P_LogicalTaskTree_WorkerShell_Trigger.htm">Trigger</a></td><td>
            Ein optionaler Trigger, der den Job wiederholt aufruft oder null.
            Wird vom IJobProvider bei der Instanziierung mitgegeben.
            </td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public Eigenschaft" title="Public Eigenschaft" /></td><td><a href="P_LogicalTaskTree_WorkerShell_WorkerState.htm">WorkerState</a></td><td>
            Zustand des Workers.
            None, Valid, Invalid.
            </td></tr></table><a href="#PageHeader">Zurück nach oben</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDAFA')" onkeypress="SectionExpandCollapse_CheckKey('IDAFA', event)" tabindex="0"><img id="IDAFAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methoden</span></div><div id="IDAFASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Beschreibung</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_WorkerShell_BreakExec.htm">BreakExec</a></td><td>
            Abbrechen der Task.
            Worker Scheduler (nicht den Worker!) über CancellationToken abbrechen.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_NodeShellBase_CanRun.htm">CanRun</a></td><td>
            Wird von Vishnu vor jedem Run eines Checkers, Workers oder vor
            Start eines Triggers aufgerufen.
            Returnt true, wenn der Run/Start ausgewführt werden kann.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeShellBase.htm">NodeShellBase</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_WorkerShell_Exec.htm">Exec</a></td><td>
            Startet einen zuständigen Worker, nachdem sich ein definierter Zustand
            (TreEvent) im Tree geändert hat.
            Intern wird für jeden Exec eine eigene Task gestartet.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_WorkerShell_Exists.htm">Exists</a></td><td>
            Returnt True, wenn der SlavePathName existiert und Zugriff möglich ist.
            </td></tr></table><a href="#PageHeader">Zurück nach oben</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Anmerkungen</span></div><div id="IDBCSection" class="collapsibleSection">
             File: WorkerShell.cs
             Autor: Erik Nagel
            
             01.03.2013 Erik Nagel: erstellt
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Siehe auch</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Referenz</h4><div><a href="N_LogicalTaskTree.htm">LogicalTaskTree Namensraum</a></div></div></div></div><div id="PageFooter" class="pageFooter">Naturgemäß basieren viele Erkenntnisse und Entwicklungen auf im Internet frei zugänglichen Informationen. Eventuell fehlende Verweise auf ursprüngliche Autoren sind unbeabsichtigt und werden nach Meldung sofort nachgepflegt.<p>Copyright © 2012-2025 Erik Nagel</p><div class="feedbackLink">Senden Sie Kommentare zu diesem Feature an
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Ihre Rückmeldung wird für die Verbesserung der Dokumentation und des Produktes genutzt. Ihre Email-Adresse wird zu keinem anderen Zweck benutzt und wird nach der Behebung des gemeldeten Problems gelöscht. Während der Arbeit an dem Problem kann es sein dass Sie per Email kontaktiert werden für weitergehende Details oder Abklärung zur Rückmeldung von Ihnen. Nachdem das Problem eingegrenzt worden ist kann es sein dass Sie eine Email erhalten zur Problembehebung.");
        </script></div></body></html>