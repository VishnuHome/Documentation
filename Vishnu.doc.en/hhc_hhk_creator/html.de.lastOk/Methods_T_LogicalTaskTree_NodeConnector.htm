<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="de-de" /><meta name="Microsoft.Help.Locale" content="de-de" /><meta name="Microsoft.Help.TopicLocale" content="de-de" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-de-DE.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>NodeConnector Methoden</title><meta name="Title" content="NodeConnector Methoden" /><meta name="Microsoft.Help.Id" content="Methods.T:LogicalTaskTree.NodeConnector" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="NodeConnector Klasse, Methoden" /><meta name="container" content="LogicalTaskTree" /><meta name="file" content="Methods_T_LogicalTaskTree_NodeConnector" /><meta name="guid" content="Methods_T_LogicalTaskTree_NodeConnector" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/ad9ee8b6-c68c-47ec-9584-d85046eb3137.htm" title="Vishnu - der logische Prozess-Monitor" tocid="roottoc">Vishnu - der logische Prozess-Monitor</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Vishnu_doc_de.htm" title="Vishnu - technische Dokumentation" tocid="R_Project_Vishnu_doc_de">Vishnu - technische Dokumentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_LogicalTaskTree.htm" title="LogicalTaskTree" tocid="N_LogicalTaskTree">LogicalTaskTree</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_LogicalTaskTree_NodeConnector.htm" title="NodeConnector Klasse" tocid="T_LogicalTaskTree_NodeConnector">NodeConnector Klasse</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_LogicalTaskTree_NodeConnector.htm" title="NodeConnector Methoden" tocid="Methods_T_LogicalTaskTree_NodeConnector">NodeConnector Methoden</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_LogicalTaskTree_NodeConnector_Break.htm" title="Break Methode" tocid="M_LogicalTaskTree_NodeConnector_Break">Break Methode</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_LogicalTaskTree_NodeConnector_DoRun.htm" title="DoRun Methode" tocid="M_LogicalTaskTree_NodeConnector_DoRun">DoRun Methode</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_LogicalTaskTree_NodeConnector_Equals.htm" title="Equals Methode" tocid="M_LogicalTaskTree_NodeConnector_Equals">Equals Methode</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_LogicalTaskTree_NodeConnector_GetHashCode.htm" title="GetHashCode Methode" tocid="M_LogicalTaskTree_NodeConnector_GetHashCode">GetHashCode Methode</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_LogicalTaskTree_NodeConnector_InitReferencedNode.htm" title="InitReferencedNode Methode" tocid="M_LogicalTaskTree_NodeConnector_InitReferencedNode">InitReferencedNode Methode</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_LogicalTaskTree_NodeConnector_Reload.htm" title="Reload Methode" tocid="M_LogicalTaskTree_NodeConnector_Reload">Reload Methode</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_LogicalTaskTree_NodeConnector_Run.htm" title="Run Methode" tocid="M_LogicalTaskTree_NodeConnector_Run">Run Methode</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_LogicalTaskTree_NodeConnector_SubNodeProgressFinished.htm" title="SubNodeProgressFinished Methode" tocid="M_LogicalTaskTree_NodeConnector_SubNodeProgressFinished">SubNodeProgressFinished Methode</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_LogicalTaskTree_NodeConnector_SubNodeResultChanged.htm" title="SubNodeResultChanged Methode" tocid="M_LogicalTaskTree_NodeConnector_SubNodeResultChanged">SubNodeResultChanged Methode</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_LogicalTaskTree_NodeConnector_ToString.htm" title="ToString Methode" tocid="M_LogicalTaskTree_NodeConnector_ToString">ToString Methode</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_LogicalTaskTree_NodeConnector_UserBreak.htm" title="UserBreak Methode" tocid="M_LogicalTaskTree_NodeConnector_UserBreak">UserBreak Methode</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_LogicalTaskTree_NodeConnector_UserRun.htm" title="UserRun Methode" tocid="M_LogicalTaskTree_NodeConnector_UserRun">UserRun Methode</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>Node<wbr />Connector Methoden</h1></td></tr></table><p>Der <a href="T_LogicalTaskTree_NodeConnector.htm">NodeConnector</a> Typ exponiert die folgenden Member.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDADA')" onkeypress="SectionExpandCollapse_CheckKey('IDADA', event)" tabindex="0"><img id="IDADAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methoden</span></div><div id="IDADASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Beschreibung</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_NodeConnector_Break.htm">Break</a></td><td>
            Überschrieben, um das Abbrechen von ValueModifiern zu unterbinden.
            Stattdessen wird zum Originalknoten weitergeleitet.
            <br />(Überschreibt <a href="M_LogicalTaskTree_LogicalNode_Break.htm">LogicalNode<span id="LSTD1FAE3F8_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Break(Boolean)</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_CanControlledTreeStart.htm">CanControlledTreeStart</a></td><td>
            Gibt an, ob ein (Teil-)Baum in einem JobController gestartet werden kann, d.h. dass
            der Knoten und alle seine Eltern (rekursiv) gestartet werden können.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_NetEti_Globals_GenericTree_1_Climb2Top.htm">Climb2Top</a></td><td>
            Hangelt sich durch den Baum nach oben (bis zur Root)
            und ruft für jeden Knoten die Action auf.
            <br />(Vererbt von <a href="T_NetEti_Globals_GenericTree_1.htm">GenericTree<span id="LSTD1FAE3F8_1" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTD1FAE3F8_2" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_NodeConnector_DoRun.htm">DoRun</a></td><td>
            Hier wird der Checker-Thread gestartet.
            Diese Routine läuft asynchron.
            <br />(Überschreibt <a href="M_LogicalTaskTree_LogicalNode_DoRun.htm">LogicalNode<span id="LSTD1FAE3F8_3" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>DoRun(TreeEvent)</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_NodeConnector_Equals.htm">Equals</a></td><td>
            Vergleicht den Inhalt dieses NodeConnectors nach logischen Gesichtspunkten
            mit dem Inhalt eines übergebenen NodeConnectors.
            <br />(Überschreibt <a href="M_LogicalTaskTree_LogicalNode_Equals.htm">LogicalNode<span id="LSTD1FAE3F8_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Equals(Object)</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_FindEventTriggers.htm">FindEventTriggers</a></td><td>
            Sucht nach zuständigen Triggern für ein Event.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_FindNodeById.htm">FindNodeById</a></td><td>
            Hierüber kann eine Ableitung von LogicalNode ihren eigenen Thread
            zum Abbruch veranlassen.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_NodeParent_FreeChildAt.htm">FreeChildAt</a></td><td>
            Löst die Event-Verknüpfungen mit dem Child-Knoten am Index index und 
            ruft danach ggf. Dispose für den Child-Knoten auf.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeParent.htm">NodeParent</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_GetEnvironment.htm">GetEnvironment</a></td><td>
            Returniert das ConcurrentDictionary Environment als einfaches Dictionary Results.
            Benutzt dazu die interne Routine GetResultsFromResultList().
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_NodeConnector_GetHashCode.htm">GetHashCode</a></td><td>
            Erzeugt einen Hashcode für diesen NodeConnector.
            <br />(Überschreibt <a href="M_LogicalTaskTree_LogicalNode_GetHashCode.htm">LogicalNode<span id="LSTD1FAE3F8_5" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>GetHashCode<span id="LSTD1FAE3F8_6" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_GetlastEventSourceIfIsTreeEventTriggered.htm">GetlastEventSourceIfIsTreeEventTriggered</a></td><td>
            Aktualisiert bei TreeEvent-getriggerten Knoten die Werte
            des Knotens, bevor mit ihnen weitergearbeitet wird.
            Ist bei Situationen wichtig, in dem entweder der Knoten das
            auslösende TreeEvent verpasst hat (beim Programmstart)
            oder ein anderes TreeEvent schneller war und zu einer
            Reaktion führt, die die aktuellen Werte des Knotens
            benötigt (JobSnapshotTrigger).
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_GetResults.htm">GetResults</a></td><td>
            Returniert das ConcurrentDictionary ResultList als einfaches Dictionary Results.
            Benutzt dazu die interne Routine GetResultsFromResultList().
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_GetTopRootJobList.htm">GetTopRootJobList</a></td><td>
            Liefert die für den Knoten gültige, oberste Root-JobList.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_InitFromNode.htm">InitFromNode</a></td><td>
            Setzt bestimmte Eigenschaften auf die Werte der übergebenen LogicalNode "source". 
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_InitNode.htm">InitNode</a></td><td>
            Setzt den Knoten auf die Starteinstellungen zurück.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_NodeConnector_InitReferencedNode.htm">InitReferencedNode</a></td><td>
            Merkt sich den zu referenzierenden Knoten und hängt sich in dessen Events.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_Invalidate.htm">Invalidate</a></td><td>
            Löscht interne Caches, so dass alles neu ausgewertet wird.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_MarkThreadAsInvalidIfActive.htm">MarkThreadAsInvalidIfActive</a></td><td>
            Trägt thread in die Liste ungültiger Threads ein,
            falls der Thread noch aktiv ist.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_OnLastNotNullLogicalChanged.htm">OnLastNotNullLogicalChanged</a></td><td>
            Löst das NodeLastNotNullLogicalChanged-Ereignis aus.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_OnNodeBreaked.htm">OnNodeBreaked</a></td><td>
            Löst das NodeBreaked-Ereignis aus.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_OnNodeProgressChanged.htm">OnNodeProgressChanged</a></td><td>
            Löst das NodeProgressChanged-Ereignis aus.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_OnNodeProgressFinished.htm">OnNodeProgressFinished</a></td><td>
            Löst das NodeProgressFinished-Ereignis aus.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_OnNodeProgressStarted.htm">OnNodeProgressStarted</a></td><td>
            Löst das NodeStarted-Ereignis aus.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_OnNodeWorkersStateChanged.htm">OnNodeWorkersStateChanged</a></td><td>
            Löst das NodeWorkersStateChanged-Ereignis aus.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_ProcessTreeEvent.htm">ProcessTreeEvent</a></td><td>
            Stößt weitere Verarbeitungen für das aktuelle TreeEvent an (Trigger, Logger).
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_RaiseNodeLastNotNullLogicalChangedWithTreeEvent.htm">RaiseNodeLastNotNullLogicalChangedWithTreeEvent</a></td><td>
            Triggert das TreeEvent "AnyLastNotNullLogicalHasChanged" und ruft "OnNodeLastNotNullLogicalChanged".
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_RaiseNodeLogicalChanged.htm">RaiseNodeLogicalChanged</a></td><td>
            Kapselt den Aufruf des nicht vererbbaren Events NodeLogicalChanged für
            für die abgeleiteten Klassen NodeList und JobList.
            Diese Routine gibt das Event über NodeLogicalChanged letzten Endes an die UI weiter.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_Refresh.htm">Refresh</a></td><td>
            Sorgt für eine sofortige Neu-Auswertung aller gecashten Zustände.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_RegisterTriggeredNodes.htm">RegisterTriggeredNodes</a></td><td>
            Registriert alle getriggerten Knoten eines Teilbaums bei ihren Triggern.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_NodeParent_ReleaseChildAt.htm">ReleaseChildAt</a></td><td>
            Löst die Event-Verknüpfungen mit dem Child-Knoten am Index index.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeParent.htm">NodeParent</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_NodeConnector_Reload.htm">Reload</a></td><td>
            Lädt den Zweig oder Knoten neu.
            <br />(Überschreibt <a href="M_LogicalTaskTree_LogicalNode_Reload.htm">LogicalNode<span id="LSTD1FAE3F8_7" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Reload<span id="LSTD1FAE3F8_8" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_ResetAllTreeEventTriggeringNodes.htm">ResetAllTreeEventTriggeringNodes</a></td><td>
            Setzt alle Knoten im Teilbaum zurück, von denen andere per TreeEvent abhängen.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_ResetAllTreeNodes.htm">ResetAllTreeNodes</a></td><td>
            Setzt alle Knoten im gesamten Tree zurück.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_ResetPartTreeNodes.htm">ResetPartTreeNodes</a></td><td>
            Setzt alle Knoten im Teilbaum ab branch zurück.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_NodeConnector_Run.htm">Run</a></td><td>
            Überschrieben, um das Starten von ValueModifiern zu unterbinden.
            Stattdessen wird über UserRun zum Originalknoten weitergeleitet.
            <br />(Überschreibt <a href="M_LogicalTaskTree_LogicalNode_Run.htm">LogicalNode<span id="LSTD1FAE3F8_9" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Run(TreeEvent)</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_NodeParent_SetChildAt.htm">SetChildAt</a></td><td>
            Speichert den Kindknoten am übergebenen Index und hängt sich in die Events des Kindknoten ein.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeParent.htm">NodeParent</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_SetTreeCollapsed.htm">SetTreeCollapsed</a></td><td>
            Setzt die Property StartCollapsed für einen ganzen (Teil-)Baum.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_SetWorkersState.htm">SetWorkersState</a></td><td>
            Setzt einen gemeinsamen (kombinierten) NodeWorkerState 'WorkersState'
            für alle NodeWorker.
            Retourniert NodeWorkersState.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_NodeParent_SubNodeExceptionCleared.htm">SubNodeExceptionCleared</a></td><td>
            Wird angesprungen, wenn in einem Kind eine Exception gelöscht wurde.
            Kaskadiert die Auflösung einer vormaligen Exception u.U. bis zum Root-Knoten nach oben.
            Parent-Knoten mit mehreren Kindern (NodeList) generieren ihrerseits ein ExceptionCleared-Event
            nur dann, wenn kein Child-Knoten mehr eine Exception hält.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeParent.htm">NodeParent</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_NodeParent_SubNodeExceptionRaised.htm">SubNodeExceptionRaised</a></td><td>
            Wird angesprungen, wenn in einem Kind eine Exception aufgetreten ist.
            Kaskadiert die Exception bis zum Root-Knoten nach oben, ohne die Verarbeitung abzubrechen.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeParent.htm">NodeParent</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_NodeParent_SubNodeLastNotNullLogicalChanged.htm">SubNodeLastNotNullLogicalChanged</a></td><td>
            Wird angesprungen, wenn sich der logische Zustand "LastNotNullLogical" eines Kindes geändert hat.
            Dieses Event ist entscheidend für eine mögliche Änderung des logischen Zustandes des Parent-Knoten.
            Kann von SingleNodes und ParentNodes bis hin zum Root-Knoten ausgelöst werden.
            Ursprünglicher Auslöser ist immer eine SingleNode.
            Kaskadiert u.U. im Tree bis zum Root-Knoten nach oben.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeParent.htm">NodeParent</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_NodeParent_SubNodeLogicalChanged.htm">SubNodeLogicalChanged</a></td><td>
            Wird angesprungen, wenn sich das aktuelle logische Ergebnis des Child-Knotens geändert hat.
            Wird von einer SingleNode ausgelöst.
            Setzt sich im Tree nur bis zum direkten Parent-Knoten fort.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeParent.htm">NodeParent</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_NodeParent_SubNodeProgressChanged.htm">SubNodeProgressChanged</a></td><td>
            Wird angesprungen, wenn sich der Verarbeitungsfortschritt
            des Referenzierten Originalknotens geändert hat.
            Setzt sich im Tree nur bis zum direkten Parent-Knoten fort.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeParent.htm">NodeParent</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_NodeConnector_SubNodeProgressFinished.htm">SubNodeProgressFinished</a></td><td>
            Wird angesprungen, wenn die Verarbeitung des Kind-Knotens beendet ist.
            Kaskadiert u.U. im Tree bis zum Root-Knoten.
            Parent-Knoten mit mehreren Kindern (NodeList) generieren ihrerseits ein NodeProgressFinished-Event
            nur dann, wenn die Verarbeitung aller Kind-Knoten beendet ist.
            <br />(Überschreibt <a href="M_LogicalTaskTree_NodeParent_SubNodeProgressFinished.htm">NodeParent<span id="LSTD1FAE3F8_10" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SubNodeProgressFinished(Object, ProgressChangedEventArgs)</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_NodeParent_SubNodeProgressStarted.htm">SubNodeProgressStarted</a></td><td>
            Wird angesprungen, wenn die Verarbeitung des Kind-Knotens gestarted wurde.
            Kaskadiert u.U. im Tree bis zum Root-Knoten nach oben.
            Parent-Knoten mit mehreren Kindern (NodeList) generieren ihrerseits ein NodeProgressStarted-Event
            nur dann, wenn dieses das erste (und bisher einzige) Kind ist, dessen Verarbeitung gestartet wurde.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeParent.htm">NodeParent</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_NodeConnector_SubNodeResultChanged.htm">SubNodeResultChanged</a></td><td>
            Wird angesprungen, wenn sich das Result eines Kind-Knotens geändert hat.
            Kaskadiert im Tree bis zum Root-Knoten nach oben.
            <br />(Überschreibt <a href="M_LogicalTaskTree_NodeParent_SubNodeResultChanged.htm">NodeParent<span id="LSTD1FAE3F8_11" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SubNodeResultChanged(LogicalNode, Result)</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_NodeParent_SubNodeStateChanged.htm">SubNodeStateChanged</a></td><td>
            Wird angesprungen, wenn sich der Verarbeitungszustand eines Kindes geändert hat.
            Wird von einer SingleNode ausgelöst.
            Setzt sich im Tree nur bis zum direkten Parent-Knoten fort.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeParent.htm">NodeParent</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_ThreadUpdateLastLogical.htm">ThreadUpdateLastLogical</a></td><td>
            Setzt threadsafe LastLogical.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_NodeParent_ThreadUpdateLastLogicalState.htm">ThreadUpdateLastLogicalState</a></td><td>
            Setzt threadsafe LastLogicalState.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeParent.htm">NodeParent</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_NodeParent_ThreadUpdateLastSingleNodesFinished.htm">ThreadUpdateLastSingleNodesFinished</a></td><td>
            Setzt threadsafe LastSingleNodesFinished.
            <br />(Vererbt von <a href="T_LogicalTaskTree_NodeParent.htm">NodeParent</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_ThreadUpdateLastState.htm">ThreadUpdateLastState</a></td><td>
            Setzt threadsafe LastState.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_NodeConnector_ToString.htm">ToString</a></td><td>
            Überschriebene ToString()-Methode.
            <br />(Überschreibt <a href="M_LogicalTaskTree_LogicalNode_ToString.htm">LogicalNode<span id="LSTD1FAE3F8_12" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ToString<span id="LSTD1FAE3F8_13" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_NetEti_Globals_GenericTree_1_Traverse.htm">Traverse(Action<span id="LSTD1FAE3F8_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, T<span id="LSTD1FAE3F8_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Geht rekursiv durch den Baum und ruft für jeden Knoten die Action auf.
            <br />(Vererbt von <a href="T_NetEti_Globals_GenericTree_1.htm">GenericTree<span id="LSTD1FAE3F8_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTD1FAE3F8_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_NetEti_Globals_GenericTree_1_Traverse_1.htm">Traverse(Func<span id="LSTD1FAE3F8_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, T, Object, Object<span id="LSTD1FAE3F8_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Geht rekursiv durch den Baum und ruft für jeden Knoten die Action auf.
            <br />(Vererbt von <a href="T_NetEti_Globals_GenericTree_1.htm">GenericTree<span id="LSTD1FAE3F8_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTD1FAE3F8_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_NetEti_Globals_GenericTree_1_Traverse_2.htm">Traverse(Int32, Action<span id="LSTD1FAE3F8_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, T<span id="LSTD1FAE3F8_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Rekursive Hilfsroutine für die öffentliche Routine 'Traverse'.
            <br />(Vererbt von <a href="T_NetEti_Globals_GenericTree_1.htm">GenericTree<span id="LSTD1FAE3F8_24" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTD1FAE3F8_25" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_NetEti_Globals_GenericTree_1_Traverse_3.htm">Traverse(Int32, Func<span id="LSTD1FAE3F8_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, T, Object, Object<span id="LSTD1FAE3F8_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Object)</a></td><td>
            Rekursive Hilfsroutine für die öffentliche Routine 'Traverse'.
            <br />(Vererbt von <a href="T_NetEti_Globals_GenericTree_1.htm">GenericTree<span id="LSTD1FAE3F8_28" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTD1FAE3F8_29" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected Methode" title="Protected Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_UnMarkThreadAsInvalid.htm">UnMarkThreadAsInvalid</a></td><td>
            Entfernt thread aus der Liste ungültiger Threads.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_LogicalNode_UnregisterTriggeredNode.htm">UnregisterTriggeredNode</a></td><td>
            Setzt den Teilbaum auf nicht startbar.
            <br />(Vererbt von <a href="T_LogicalTaskTree_LogicalNode.htm">LogicalNode</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_NodeConnector_UserBreak.htm">UserBreak</a></td><td>
            Stoppt den Originalknoten.
            <br />(Überschreibt <a href="M_LogicalTaskTree_LogicalNode_UserBreak.htm">LogicalNode<span id="LSTD1FAE3F8_30" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>UserBreak<span id="LSTD1FAE3F8_31" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Methode" title="Public Methode" /></td><td><a href="M_LogicalTaskTree_NodeConnector_UserRun.htm">UserRun</a></td><td>
            Startet den Originalknoten.
            <br />(Überschreibt <a href="M_LogicalTaskTree_LogicalNode_UserRun.htm">LogicalNode<span id="LSTD1FAE3F8_32" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>UserRun<span id="LSTD1FAE3F8_33" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr></table><a href="#PageHeader">Zurück nach oben</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Siehe auch</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Referenz</h4><div><a href="T_LogicalTaskTree_NodeConnector.htm">NodeConnector Klasse</a></div><div><a href="N_LogicalTaskTree.htm">LogicalTaskTree Namensraum</a></div></div></div></div><div id="PageFooter" class="pageFooter">Naturgemäß basieren viele Erkenntnisse und Entwicklungen auf im Internet frei zugänglichen Informationen. Eventuell fehlende Verweise auf ursprüngliche Autoren sind unbeabsichtigt und werden nach Meldung sofort nachgepflegt.<p>Copyright © 2012-2025 Erik Nagel</p><div class="feedbackLink">Senden Sie Kommentare zu diesem Feature an
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Ihre Rückmeldung wird für die Verbesserung der Dokumentation und des Produktes genutzt. Ihre Email-Adresse wird zu keinem anderen Zweck benutzt und wird nach der Behebung des gemeldeten Problems gelöscht. Während der Arbeit an dem Problem kann es sein dass Sie per Email kontaktiert werden für weitergehende Details oder Abklärung zur Rückmeldung von Ihnen. Nachdem das Problem eingegrenzt worden ist kann es sein dass Sie eine Email erhalten zur Problembehebung.");
        </script></div></body></html>