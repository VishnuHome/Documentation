<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="de-de" /><meta name="Microsoft.Help.Locale" content="de-de" /><meta name="Microsoft.Help.TopicLocale" content="de-de" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-de-DE.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>eigene Checker</title><meta name="Microsoft.Help.Id" content="a3f9771a-ac24-46c0-97df-d2bde6a990e8" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Microsoft.Help.Category" content="XML" /><meta name="Description" content="Dieses Kapitel handelt von selbst erstellten Checker-Dlls. Über eigene Checker können Sie die Überwachungen beliebiger Prozesse oder Zustände erreichen, die nur Sie selbst kennen können." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Vishnu - der logische Prozess-Monitor<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/ad9ee8b6-c68c-47ec-9584-d85046eb3137.htm" title="Vishnu - der logische Prozess-Monitor" tocid="roottoc">Vishnu - der logische Prozess-Monitor</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1ccf9fe4-94f8-49ff-9234-506c5ad9daa7.htm" title="fortgeschrittene Themen" tocid="1ccf9fe4-94f8-49ff-9234-506c5ad9daa7">fortgeschrittene Themen</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ac884694-516c-4c98-a2af-d79cc504d0f6.htm" title="benannte Trigger und Logger" tocid="ac884694-516c-4c98-a2af-d79cc504d0f6">benannte Trigger und Logger</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/628bbc96-dcd7-4563-a515-5a2edf9ebc10.htm" title="Snapshots" tocid="628bbc96-dcd7-4563-a515-5a2edf9ebc10">Snapshots</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0af46309-8c47-467f-a231-36615b7488d4.htm" title="Anforderungen an Anwender-Module" tocid="0af46309-8c47-467f-a231-36615b7488d4">Anforderungen an Anwender-Module</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/a3f9771a-ac24-46c0-97df-d2bde6a990e8.htm" title="eigene Checker" tocid="a3f9771a-ac24-46c0-97df-d2bde6a990e8">eigene Checker</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/74204d60-cbb3-4f38-8266-aa7af541143f.htm" title="eigene Views" tocid="74204d60-cbb3-4f38-8266-aa7af541143f">eigene Views</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f724b721-c805-4dbe-8db4-1529c0c68f3d.htm" title="eigene Parameter-Reader" tocid="f724b721-c805-4dbe-8db4-1529c0c68f3d">eigene Parameter-Reader</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b2bd8510-a131-4466-9fac-66f2033d92a0.htm" title="eigene ValueModifier" tocid="b2bd8510-a131-4466-9fac-66f2033d92a0">eigene ValueModifier</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c2c472b6-b252-4bd6-bf6a-0b15bc404ea4.htm" title="eigene Trigger" tocid="c2c472b6-b252-4bd6-bf6a-0b15bc404ea4">eigene Trigger</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3ccc247e-ea3a-47fc-9ed6-4713baf96986.htm" title="eigene Logger" tocid="3ccc247e-ea3a-47fc-9ed6-4713baf96986">eigene Logger</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f14917bd-1d50-41f0-85ff-14462a770915.htm" title="Checker-Historie loggen" tocid="f14917bd-1d50-41f0-85ff-14462a770915">Checker-Historie loggen</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>eigene Checker</h1></td></tr></table><div><p>
				Dieses Kapitel handelt von selbst erstellten <strong>Checker-Dlls</strong>.
				Über eigene <span class="keyword">Checker</span> können Sie die Überwachungen beliebiger Prozesse oder Zustände
				erreichen, die nur Sie selbst kennen können. <strong>Vishnu</strong> stellt Ihnen zwar schon einige Standard-Checker zur
				Verfügung, Sie werden aber früher oder später eigene <span class="keyword">Checker</span> mit speziellen Funktionen
				erstellen wollen. Für die Erstellung eigener DLLs sind jedoch Grundkenntnisse in einer
				<span class="keyword">DotNet</span>-Sprache, z.B. <span class="keyword">C#</span> erforderlich.
			</p><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Wichtig" />  Wichtig</th></tr><tr><td><p>
					Der Einstieg ist allerdings für <span class="keyword">C#</span> durch eine
					<strong>Vishnu</strong>-<strong>Visual Studio</strong>-Erweiterung auch ohne Programmierkenntnisse möglich.
					Es wird auf Knopfdruck ein lauffähiges Testprojekt mit Ihrem eigenen neuen
					<span class="keyword">Checker</span> generiert.
				</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="UserCheckerDemoJob"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDAB')" onkeypress="SectionExpandCollapse_CheckKey('IDDAB', event)" tabindex="0"><img id="IDDABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />der Demo Job</span></div><div id="IDDABSection" class="collapsibleSection"><p>
					So sieht der Demo-Job für eigene Checker aus:
				</p><div class="mediaNear"><img alt="User Checker Demo" src="../media/UserCheckerDemo.png" /></div><p>
					Dies ist die zugehörige <span class="keyword">JobDescription.xml</span>:
				</p><div id="IDDBDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDDBDAB_tab1" class="codeSnippetContainerTabSingle">JobDescription.xml</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDDBDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDDBDAB');return false;" title="Copy">Copy</a></div></div><div id="IDDBDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;?</span><span class="highlight-xml-tag">xml</span> <span class="highlight-xml-attribute-name">version</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1.0"</span> <span class="highlight-xml-attribute-name">encoding</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"utf-8"</span><span class="highlight-xml-bracket">?&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">JobDescription</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>UserCheckerDemo<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalExpression</span><span class="highlight-xml-bracket">&gt;</span>Predecessor AND UserChecker<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalExpression</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Checkers</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"array"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Checker</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>Predecessor<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>TrueFalseExceptionChecker.dll<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Parameters</span><span class="highlight-xml-bracket">&gt;</span>False:True:Exception|10|Predecessor: Hello World<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Parameters</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger</span><span class="highlight-xml-bracket">&gt;</span>
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>TimerTrigger.dll<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Parameters</span><span class="highlight-xml-bracket">&gt;</span>S:3|S:15<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Parameters</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Checker</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Checker</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>UserChecker<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">LogicalName</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>Plugin\UserChecker.dll<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">PhysicalPath</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Trigger</span><span class="highlight-xml-bracket">&gt;</span>
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Reference</span><span class="highlight-xml-bracket">&gt;</span>True<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Reference</span><span class="highlight-xml-bracket">&gt;</span>
        <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Parameters</span><span class="highlight-xml-bracket">&gt;</span>Predecessor<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Parameters</span><span class="highlight-xml-bracket">&gt;</span>
      <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Trigger</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Checker</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Checkers</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">JobDescription</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />  Hinweis</th></tr><tr><td><p>
						Nochmal kurz erinnert: der Start-Job kann über <a href="E6ECB24A-CA5C-4785-9514-992F359D394A.htm">Konfiguration und Parameter</a> eingestellt werden.
					</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="UserCheckerDemoProjektErzeugung"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDEAB')" onkeypress="SectionExpandCollapse_CheckKey('IDEAB', event)" tabindex="0"><img id="IDEABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />das Demo Projekt - schnell erzeugen</span></div><div id="IDEABSection" class="collapsibleSection"><p>
					Über die Visual Studio Erweiterung <strong>Vishnu_UserChecker_VSIX.vsix</strong> 
					(per Doppelklick installieren) können Sie Visual Studio eine C#-Projektvorlage für eigene Checker hinzufügen.
				</p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />  Hinweis</th></tr><tr><td><p><a href="https://neteti.de/extensions/free/64/Vishnu_UserChecker_VSIX.vsix" target="_blank" alt="Vishnu_UserChecker_VSIX.vsix">
								Vishnu_UserChecker_VSIX.vsix download link
							</a></p></td></tr></table></div><div class="mediaNear"><img alt="Vishnu User Checker VSIX" src="../media/Vishnu_UserChecker_VSIX.png" /></div><p>
					Diese Projektvorlage kann dann später für ein neues Projekt verwendet werden:
				</p><div class="mediaNear"><img alt="Vishnu User Checker VSIX select" src="../media/Vishnu_UserChecker_VSIX_select.png" /></div><p>
					Es wird eine Projektmappe mit einem Checker-Projekt und einem Testprojekt generiert.
				</p><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Achtung" />  Achtung</th></tr><tr><td><p>
						Es erfolgen während der Generierung der Projekte zwei Fehlermeldungen, dass
						dem Projekt nicht alle erforderlichen Pakete hinzugefügt werden könnten.
						Diese treffen aber nicht zu und können ignoriert werden.
					</p></td></tr></table></div><div class="mediaNear"><img alt="User Checker Solution" src="../media/UserCheckerSolution.png" /></div><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />  Hinweis</th></tr><tr><td><p>
						Der UserCecker und das Testprojekt sind sofort umwandlungsfähig und der UserChecker könnte mit der
						implementierten Demo-Funktionalität als <strong>Vishnu</strong>-Checker eingesetzt werden.
					</p><p>
						Hier die Ausgabe des Testprojekts:
					</p></td></tr></table></div><div class="mediaNear"><img alt="User Checker Demo Run" src="../media/UserCheckerDemoRun.png" /></div></div><div class="collapsibleAreaRegion" id="UserCheckerDemoProjektDetails"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFAB')" onkeypress="SectionExpandCollapse_CheckKey('IDFAB', event)" tabindex="0"><img id="IDFABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />das Demo Projekt - Details</span></div><div id="IDFABSection" class="collapsibleSection"><p>
					Die Klasse <strong>UserChecker</strong> im durch die Projektvorlage generierten Projekt (s.o.)
					enthält als Haupt-Verarbeitungslogik die Methode <strong>Work</strong>.
					Hier können Sie Ihre geschäftsspezifische Verarbeitungslogik einbauen:
				</p><div id="IDBBFAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDBBFAB_tab1" class="codeSnippetContainerTabSingle">Methode 'Work' in der Klasse UserChecker</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDBBFAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDBBFAB');return false;" title="Copy">Copy</a></div></div><div id="IDBBFAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">    ...
<span class="highlight-keyword">private</span> <span class="highlight-keyword">bool</span>? Work(TreeEvent source)
{
    <span class="highlight-comment">// Beispielhaft wird hier über das übergebene TreeEvent ein Zusatzparameter</span>
    <span class="highlight-comment">// aus dem Result eines angenommenen Vorgänger-Checkers weiterverarbeitet.</span>
    <span class="highlight-comment">// Bei den meisten Checkern ist dieser Teil allerdings nicht erforderlich.</span>
    <span class="highlight-keyword">string</span> demoInterestingPredecessorHello = <span class="highlight-keyword">null</span>;
    <span class="highlight-keyword">if</span> (source?.Results?.ContainsKey(<span class="highlight-literal">"Predecessor"</span>) == <span class="highlight-keyword">true</span>)
    {
        <span class="highlight-keyword">object</span> returnObject = source.Results[<span class="highlight-literal">"Predecessor"</span>].ReturnObject;
        demoInterestingPredecessorHello = GenericPropertyGetter.GetProperty&lt;<span class="highlight-keyword">string</span>&gt;(
            returnObject, <span class="highlight-literal">"DefaultResultProperty"</span>);
    }
    <span class="highlight-keyword">else</span>
    {
        <span class="highlight-keyword">if</span> (source?.Environment?.ContainsKey(<span class="highlight-literal">"Predecessor"</span>) == <span class="highlight-keyword">true</span>)
        {
            <span class="highlight-keyword">object</span> returnObject = source.Environment[<span class="highlight-literal">"Predecessor"</span>].ReturnObject;
            demoInterestingPredecessorHello = GenericPropertyGetter.GetProperty&lt;<span class="highlight-keyword">string</span>&gt;(
                returnObject, <span class="highlight-literal">"DefaultResultProperty"</span>);
        }
        <span class="highlight-comment">// Je nach Anforderungen kann hier eine Exception geworfen werden.</span>
        <span class="highlight-comment">//else</span>
        <span class="highlight-comment">//{</span>
        <span class="highlight-comment">//    throw new ApplicationException(</span>
        <span class="highlight-comment">//    "UserChecker: DemoInterestingPredecessor wurde nicht gefunden!");</span>
        <span class="highlight-comment">//}</span>
    }

    <span class="highlight-comment">// Hier folgt die eigentliche Checker-Verarbeitung, die einen erweiterten boolean als Rückgabe</span>
    <span class="highlight-comment">// dieses Checkers ermittelt und ggf. auch ein Return-Objekt mit zusätzlichen Informationen füllt.</span>
    <span class="highlight-comment">// Die Rückgabe kann völlig unabhängig von Results oder Environment sein; ist hier nur für</span>
    <span class="highlight-comment">// die Demo abhängig kodiert.</span>
    <span class="highlight-comment">// TODO: hier können Sie Ihre eigene Verarbeitung implementieren.</span>
    <span class="highlight-keyword">if</span> (!String.IsNullOrEmpty(demoInterestingPredecessorHello))
    {
        <span class="highlight-keyword">this</span>._returnObject = demoInterestingPredecessorHello;
        <span class="highlight-keyword">return</span> <span class="highlight-keyword">true</span>;
    }
    <span class="highlight-keyword">else</span>
    {
        <span class="highlight-keyword">this</span>._returnObject = <span class="highlight-literal">"no Predecessor-Result found!"</span>;
        <span class="highlight-keyword">return</span> <span class="highlight-keyword">false</span>;
    }
}
    ...</pre></div></div></div><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Hinweis" />  Hinweis</th></tr><tr><td><p>
						Wie man im Beispiel sehen kann, ist auch der Zugriff auf das Vishnu-Environment möglich.
						Dies ist aber in der Praxis selten notwendig.
					</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="SieheAuch"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDGAB')" onkeypress="SectionExpandCollapse_CheckKey('IDGAB', event)" tabindex="0"><img id="IDGABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Siehe auch</span></div><div id="IDGABSection" class="collapsibleSection"><p><a href="bc0ffa08-c936-4fad-8fdb-dbd2279fc360.htm#Checker">Vishnu Akteure</a></p><p><a href="74204d60-cbb3-4f38-8266-aa7af541143f.htm">eigene Views</a></p></div></div></div><div id="PageFooter" class="pageFooter">Naturgemäß basieren viele Erkenntnisse und Entwicklungen auf im Internet frei zugänglichen Informationen. Eventuell fehlende Verweise auf ursprüngliche Autoren sind unbeabsichtigt und werden nach Meldung sofort nachgepflegt.<p>Copyright © 2012-2025 Erik Nagel</p><div class="feedbackLink">Senden Sie Kommentare zu diesem Feature an
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Ihre Rückmeldung wird für die Verbesserung der Dokumentation und des Produktes genutzt. Ihre Email-Adresse wird zu keinem anderen Zweck benutzt und wird nach der Behebung des gemeldeten Problems gelöscht. Während der Arbeit an dem Problem kann es sein dass Sie per Email kontaktiert werden für weitergehende Details oder Abklärung zur Rückmeldung von Ihnen. Nachdem das Problem eingegrenzt worden ist kann es sein dass Sie eine Email erhalten zur Problembehebung.");
        </script></div></body></html>