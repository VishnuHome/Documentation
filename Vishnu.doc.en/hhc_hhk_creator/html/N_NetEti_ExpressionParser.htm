<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-US" /><meta name="Microsoft.Help.Locale" content="en-US" /><meta name="Microsoft.Help.TopicLocale" content="en-US" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>NetEti.ExpressionParser namespace</title><meta name="Title" content="NetEti.ExpressionParser" /><meta name="Microsoft.Help.Id" content="N:NetEti.ExpressionParser" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="NetEti.ExpressionParser namespace" /><meta name="Microsoft.Help.F1" content="NetEti.ExpressionParser" /><meta name="container" content="NetEti.ExpressionParser" /><meta name="file" content="N_NetEti_ExpressionParser" /><meta name="guid" content="N_NetEti_ExpressionParser" /><meta name="Description" content="Processing routines for logical expressions" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Vishnu - logical monitoring job controller</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>Net<wbr />Eti.<wbr />Expression<wbr />Parser namespace</h1></td></tr></table><div class="summary">Processing routines for logical expressions</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDACA')" onkeypress="SectionExpandCollapse_CheckKey('IDACA', event)" tabindex="0"><img id="IDACAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="IDACASection" class="collapsibleSection"><table id="classList" class="members"><tr><th class="iconColumn"> </th><th>Class</th><th>Description of the</th></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ExpressionParser_ArithmeticParser.htm">ArithmeticParser</a></td><td>
            A parser for arithmetic expressions (experimental).
            Creates an equivalent tree from a text expression.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ExpressionParser_BooleanParser.htm">BooleanParser</a></td><td>
            A parser for Boolean expressions.
            Creates an equivalent tree from a text expression.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ExpressionParser_ExpressionParser.htm">ExpressionParser</a></td><td>
             A parser for general expressions.
             Creates an equivalent tree from a text expression.
             Must be derived; the syntax must then be defined in the derivation.
             <a href="T_NetEti_ExpressionParser_BooleanParser.htm">BooleanParser</a><a href="T_NetEti_ExpressionParser_ArithmeticParser.htm">ArithmeticParser</a><a href="T_NetEti_ExpressionParser_LogicalParser.htm">LogicalParser</a></td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ExpressionParser_LogicalParser.htm">LogicalParser</a></td><td>
            A parser for extended Boolean expressions.
            In addition to the parameters defined in BooleanParser
            Operators Operators for 'less than', 'equal to' and 'greater than' are taken into account.
            For reasons of convenience, operators are also used in the
            for 'unequal', 'less than or equal to' and 'greater than or equal to'.
            Creates an equivalent tree from a text expression.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ExpressionParser_SyntaxTree.htm">SyntaxTree</a></td><td>
             Generic tree with parsed logical or arithmetic expression.
             Function: Evaluates expressions and creates suitable syntax trees.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ExpressionParser_TresholdParser.htm">TresholdParser</a></td><td>
            A parser with the ability to resolve threshold operators.
            Derived from the parser for extended Boolean expressions.
            In addition to the
            Operators nine operators for 10%, 20%, ... , 80%, 90% threshold value.
            The threshold value logic (treshold) checks whether a certain percentage of the jobs that are subordinate to a job have been cancelled.
            node returned the result true. If the value specified by the selected operator
            percentage (threshold value) is reached or exceeded, the entire job switches to true (green display).
            Creates an equivalent tree from a text expression.
            </td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCCA')" onkeypress="SectionExpandCollapse_CheckKey('IDCCA', event)" tabindex="0"><img id="IDCCAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enumerations</span></div><div id="IDCCASection" class="collapsibleSection"><table id="enumerationList" class="members"><tr><th class="iconColumn"> </th><th>Enumeration</th><th>Description of the</th></tr><tr><td><img src="../icons/pubEnumeration.gif" alt="Public Enumeration" title="Public Enumeration" /></td><td><a href="T_NetEti_ExpressionParser_SyntaxElement.htm">SyntaxElement</a></td><td>
            General syntax elements that are used in a logical expression
            can occur.
            </td></tr></table></div></div></div><div id="PageFooter" class="pageFooter">Naturally, many findings and developments are based on information freely available on the Internet. Any missing references to original authors are unintentional and will be updated as soon as they are reported.<p>Copyright © 2012-2025 Erik Nagel</p><div class="feedbackLink">Send comments about this feature to
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback will be used to improve the documentation and the product. Your email address will not be used for any other purpose and will be deleted after the reported issue has been resolved. While working on the problem, you may be contacted by email for further details or clarification of your feedback. After the problem has been isolated, you may receive an email to resolve the issue.");
        </script></div></body></html>