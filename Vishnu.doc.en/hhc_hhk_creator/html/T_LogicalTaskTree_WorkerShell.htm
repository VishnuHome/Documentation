<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-US" /><meta name="Microsoft.Help.Locale" content="en-US" /><meta name="Microsoft.Help.TopicLocale" content="en-US" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>WorkerShell class</title><meta name="Title" content="WorkerShell class" /><meta name="Microsoft.Help.Id" content="T:LogicalTaskTree.WorkerShell" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="LogicalTaskTree.WorkerShell class" /><meta name="System.Keywords" content="WorkerShell class" /><meta name="Microsoft.Help.F1" content="LogicalTaskTree.WorkerShell" /><meta name="Microsoft.Help.F1" content="WorkerShell" /><meta name="container" content="LogicalTaskTree" /><meta name="file" content="T_LogicalTaskTree_WorkerShell" /><meta name="guid" content="T_LogicalTaskTree_WorkerShell" /><meta name="Description" content="Encapsulates the call of an external work routine, which is executed as an external exe in response to a defined change in the tree state (TreeEvent) (fire and forget) TODO: may also be realized later as a lightweight Dll plug-in." /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Vishnu - logical monitoring job controller</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>Worker<wbr />Shell class</h1></td></tr></table><div class="summary">
             Encapsulates the call of an external work routine,
             which are generated in response to a defined change in the tree state
             (TreeEvent) is executed as an external exe (fire and forget)
             TODO: later possibly also realise as lightweight Dll plugin.
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDA', event)" tabindex="0"><img id="IDDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance hierarchy</span></div><div id="IDDASection" class="collapsibleSection"><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST6A8E2E77_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Object</a><br />  <a href="T_LogicalTaskTree_NodeShellBase.htm">LogicalTaskTree<span id="LST6A8E2E77_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>NodeShellBase</a><br />    <span class="selflink">LogicalTaskTree<span id="LST6A8E2E77_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>WorkerShell</span><br /></div><br /><strong>Namespace:</strong> <a href="N_LogicalTaskTree.htm">LogicalTaskTree</a><br /><strong>Assembly:</strong> LogicalTaskTree (in LogicalTaskTree.dll) Version: 1.0.0+df0404e911d6c38eaed3bb1bb1acfc482d417643<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">WorkerShell</span> : <span class="identifier">NodeShellBase</span>,
	 
	<span class="identifier">INodeWorker</span></pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">WorkerShell</span>
	<span class="keyword">Inherits</span> <span class="identifier">NodeShellBase</span>
	<span class="keyword">Implements</span> <span class="identifier">INodeWorker</span></pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">WorkerShell</span> : <span class="keyword">public</span> <span class="identifier">NodeShellBase</span>,
	 
	<span class="identifier">INodeWorker</span></pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">WorkerShell</span> = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">NodeShellBase</span>
        <span class="keyword">interface</span> <span class="identifier">INodeWorker</span>
    <span class="keyword">end</span></pre></div></div></div></div><p>The <span class="selflink">WorkerShell</span> Type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDABFA')" onkeypress="SectionExpandCollapse_CheckKey('IDABFA', event)" tabindex="0"><img id="IDABFAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="IDABFASection" class="collapsibleSection"><table id="ConstructorList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description of the</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Method" title="Public Method" /></td><td><a href="M_LogicalTaskTree_WorkerShell__ctor.htm">WorkerShell(String, XElement)</a></td><td>
            constructor - takes over the path to the worker exe, and a parameter string that is used for the
            call of the exe is also transferred. The parameter string can be any string defined by
            The following placeholders can be resolved in the program session
            which are replaced by current runtime values when the worker exe is called:
              "%Event%" = Name of the event that led to the worker being called,
              "%Source%" = Source of the event (node in which the event first occurred),
              "%Sender%" = Node that is currently calling the worker due to the event,
              "%Timestamp%" = current date with current time in the format "dd.MM.yyyy HH.mm.ss",
              "%Logical%" = current logical value of the transmitter,
              "%Exception%" = Exception.Message, if %Event% is "Exception", otherwise "".
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Method" title="Public Method" /></td><td><a href="M_LogicalTaskTree_WorkerShell__ctor_1.htm">WorkerShell(String, XElement, Boolean, INodeTrigger)</a></td><td>
            constructor - takes over the path to the worker exe, and a parameter string that is used for the
            call of the exe is also transferred. Optionally, a trigger can also be transferred,
            which repeatedly calls a worker once it has been activated.
            In addition to any placeholders that can be resolved by the program session, the parameter string can contain
            contain the following placeholders, which are replaced by current runtime values when the worker exe is called
            be replaced:
              "%Event%" = Name of the event that led to the worker being called,
              "%Source%" = Source of the event (node in which the event first occurred),
              "%Sender%" = Node that is currently calling the worker due to the event,
              "%Timestamp%" = current date with current time in the format "dd.MM.yyyy HH.mm.ss",
              "%Logical%" = current logical value of the transmitter,
              "%Exception%" = Exception.Message, if %Event% is "Exception", otherwise "".
            </td></tr></table><a href="#PageHeader">Back to the top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDFFA')" onkeypress="SectionExpandCollapse_CheckKey('IDFFA', event)" tabindex="0"><img id="IDFFAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="IDFFASection" class="collapsibleSection"><table id="PropertyList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description of the</th></tr><tr><td><img src="../icons/protProperty.gif" alt="Protected Property" title="Protected Property" /></td><td><a href="P_LogicalTaskTree_NodeShellBase_CanRunDll.htm">CanRunDll</a></td><td>
            Dll with the instance of ICanRun. If available, CanRun is started before every
            of a node is called. If CanRun returns false, the start is cancelled.
            In CanRun, the parameters transferred via ref can also be
            be modified.
            <br />(Inherited from <a href="T_LogicalTaskTree_NodeShellBase.htm">NodeShellBase</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public Property" title="Public Property" /></td><td><a href="P_LogicalTaskTree_NodeShellBase_CanRunDllPath.htm">CanRunDllPath</a></td><td>
            Path to an optional dll that provides an ICanRun instance.
            If available, before each run of the associated checker or worker
            CanRun is called. If CanRun returns false, the start is cancelled.
            The parameters transferred can also be modified in CanRun.
            <br />(Inherited from <a href="T_LogicalTaskTree_NodeShellBase.htm">NodeShellBase</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public Property" title="Public Property" /></td><td><a href="P_LogicalTaskTree_WorkerShell_SlavePathName.htm">SlavePathName</a></td><td>
            The exe. to be called when the state of Logical changes.
            </td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public Property" title="Public Property" /></td><td><a href="P_LogicalTaskTree_WorkerShell_TransportByFile.htm">TransportByFile</a></td><td>
            If True, the parameters are transferred via an XML file, otherwise via the command line;
            Default: false.
            </td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public Property" title="Public Property" /></td><td><a href="P_LogicalTaskTree_WorkerShell_Trigger.htm">Trigger</a></td><td>
            An optional trigger that calls the job repeatedly or null.
            Is provided by the IJobProvider during instantiation.
            </td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public Property" title="Public Property" /></td><td><a href="P_LogicalTaskTree_WorkerShell_WorkerState.htm">WorkerState</a></td><td>
            Condition of the worker.
            None, Valid, Invalid.
            </td></tr></table><a href="#PageHeader">Back to the top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDAFA')" onkeypress="SectionExpandCollapse_CheckKey('IDAFA', event)" tabindex="0"><img id="IDAFAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDAFASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description of the</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Method" title="Public Method" /></td><td><a href="M_LogicalTaskTree_WorkerShell_BreakExec.htm">BreakExec</a></td><td>
            Cancel the task.
            Cancel Worker Scheduler (not the worker!) via CancellationToken.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Method" title="Public Method" /></td><td><a href="M_LogicalTaskTree_NodeShellBase_CanRun.htm">CanRun</a></td><td>
            Is used by Vishnu before each run of a Checker, Worker or before
            Start a trigger is called up.
            Returns true if the run/start can be executed.
            <br />(Inherited from <a href="T_LogicalTaskTree_NodeShellBase.htm">NodeShellBase</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Method" title="Public Method" /></td><td><a href="M_LogicalTaskTree_WorkerShell_Exec.htm">Exec</a></td><td>
            Starts a responsible worker after a defined state has been reached.
            (TreEvent) in the tree has changed.
            A separate task is started internally for each Exec.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public Method" title="Public Method" /></td><td><a href="M_LogicalTaskTree_WorkerShell_Exists.htm">Exists</a></td><td>
            Returns True if the SlavePathName exists and access is possible.
            </td></tr></table><a href="#PageHeader">Back to the top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
             File: WorkerShell.cs
             Author: Erik Nagel
            
             01.03.2013 Erik Nagel: created
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="N_LogicalTaskTree.htm">LogicalTaskTree namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter">Naturally, many findings and developments are based on information freely available on the Internet. Any missing references to original authors are unintentional and will be updated as soon as they are reported.<p>Copyright © 2012-2025 Erik Nagel</p><div class="feedbackLink">Send comments about this feature to
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback will be used to improve the documentation and the product. Your email address will not be used for any other purpose and will be deleted after the reported issue has been resolved. While working on the problem, you may be contacted by email for further details or clarification of your feedback. After the problem has been isolated, you may receive an email to resolve the issue.");
        </script></div></body></html>