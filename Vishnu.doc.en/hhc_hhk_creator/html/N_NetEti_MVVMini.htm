<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-US" /><meta name="Microsoft.Help.Locale" content="en-US" /><meta name="Microsoft.Help.TopicLocale" content="en-US" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>NetEti.MVVMini namespace</title><meta name="Title" content="NetEti.MVVMini" /><meta name="Microsoft.Help.Id" content="N:NetEti.MVVMini" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="NetEti.MVVMini namespace" /><meta name="Microsoft.Help.F1" content="NetEti.MVVMini" /><meta name="container" content="NetEti.MVVMini" /><meta name="file" content="N_NetEti_MVVMini" /><meta name="guid" content="N_NetEti_MVVMini" /><meta name="Description" content="Basic functionalities for MVVM applications" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Vishnu - logical monitoring job controller</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>Net<wbr />Eti.<wbr />MVVMini namespace</h1></td></tr></table><div class="summary">Basic functionalities for MVVM applications</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDCA')" onkeypress="SectionExpandCollapse_CheckKey('IDDCA', event)" tabindex="0"><img id="IDDCAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="IDDCASection" class="collapsibleSection"><table id="classList" class="members"><tr><th class="iconColumn"> </th><th>Class</th><th>Description of the</th></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_MVVMini_ObservableObject.htm">ObservableObject</a></td><td>
            Base class for ViewModels, encapsulates INotifyPropertyChanged.
            Adopted and adapted from a version by:
            Roman Semenov (poma) https://github.com/poma/SshConnect/blob/master/SshConnect/MvvmFoundation/ObservableObject.cs.
            Thank you very much for this initial help.
            
            2018-05-13 Erik Nagel: VerifyPropertyName moved to static class PropertySupport.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_MVVMini_PropertiesChangedEventArgs.htm">PropertiesChangedEventArgs</a></td><td>
            EventArgs for the "PropertiesChanged" event from "INotifyPropertiesChanged".
            The "PropertiesChanged" event can be subscribed to by LogicalNodeViewmodel.
            This receives a string list via the transferred PropertiesChangedEventArgs with
            property name and can in turn inform the UI via INotifyProperyChanged.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_MVVMini_PropertySupport.htm">PropertySupport</a></td><td>
            Checks expressions as properties.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_MVVMini_RelayCommand.htm">RelayCommand</a></td><td>
            Encapsulates ICommand details for WPF commands.
            </td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBCA')" onkeypress="SectionExpandCollapse_CheckKey('IDBCA', event)" tabindex="0"><img id="IDBCAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Interfaces</span></div><div id="IDBCASection" class="collapsibleSection"><table id="interfaceList" class="members"><tr><th class="iconColumn"> </th><th>Interface</th><th>Description of the</th></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_NetEti_MVVMini_INotifyPropertiesChanged.htm">INotifyPropertiesChanged</a></td><td>
            Exports the "PropertiesChanged" event and the "PropertiesChangedEventHandler" type.
            The "PropertiesChanged" event can be subscribed to by LogicalNodeViewmodel.
            This receives a string list via the transferred PropertiesChangedEventArgs with
            property name and can in turn inform the UI via INotifyProperyChanged.
            </td></tr><tr><td><img src="../icons/pubInterface.gif" alt="Public Interface" title="Public Interface" /></td><td><a href="T_NetEti_MVVMini_IRelayCommand.htm">IRelayCommand</a></td><td>
            Encapsulates ICommand details for WPF commands.
            </td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDACA')" onkeypress="SectionExpandCollapse_CheckKey('IDACA', event)" tabindex="0"><img id="IDACAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Delegate</span></div><div id="IDACASection" class="collapsibleSection"><table id="delegateList" class="members"><tr><th class="iconColumn"> </th><th>Delegate</th><th>Description of the</th></tr><tr><td><img src="../icons/pubDelegate.gif" alt="Public Delegatee" title="Public Delegatee" /></td><td><a href="T_NetEti_MVVMini_PropertiesChangedEventHandler.htm">PropertiesChangedEventHandler</a></td><td>
            "PropertiesChangedEventHandler" defines the type of an event handler routine
            for the "PropertiesChanged" event. "PropertiesChanged" can be used by LogicalNodeViewmodel
            can be subscribed to. This is received via the transferred "PropertiesChangedEventArgs"
            a string list with property names and can in turn be changed via INotifyProperyChanged
            inform the UI.
            </td></tr></table></div></div></div><div id="PageFooter" class="pageFooter">Naturally, many findings and developments are based on information freely available on the Internet. Any missing references to original authors are unintentional and will be updated as soon as they are reported.<p>Copyright © 2012-2025 Erik Nagel</p><div class="feedbackLink">Send comments about this feature to
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback will be used to improve the documentation and the product. Your email address will not be used for any other purpose and will be deleted after the reported issue has been resolved. While working on the problem, you may be contacted by email for further details or clarification of your feedback. After the problem has been isolated, you may receive an email to resolve the issue.");
        </script></div></body></html>