<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-US" /><meta name="Microsoft.Help.Locale" content="en-US" /><meta name="Microsoft.Help.TopicLocale" content="en-US" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>NetEti.ApplicationEnvironment namespace</title><meta name="Title" content="NetEti.ApplicationEnvironment" /><meta name="Microsoft.Help.Id" content="N:NetEti.ApplicationEnvironment" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="NetEti.ApplicationEnvironment namespace" /><meta name="Microsoft.Help.F1" content="NetEti.ApplicationEnvironment" /><meta name="container" content="NetEti.ApplicationEnvironment" /><meta name="file" content="N_NetEti_ApplicationEnvironment" /><meta name="guid" content="N_NetEti_ApplicationEnvironment" /><meta name="Description" content="Determination of environmental parameters of the application" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Vishnu - logical monitoring job controller</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>Net<wbr />Eti.<wbr />Application<wbr />Environment namespace</h1></td></tr></table><div class="summary">Determination of environmental parameters of the application</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDACA')" onkeypress="SectionExpandCollapse_CheckKey('IDACA', event)" tabindex="0"><img id="IDACAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="IDACASection" class="collapsibleSection"><table id="classList" class="members"><tr><th class="iconColumn"> </th><th>Class</th><th>Description of the</th></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ApplicationEnvironment_AppEnvReader.htm">AppEnvReader</a></td><td>
             Manages a list of IGetStringValue objects and queries them.
             in order to return the first valid result itself as IGetStringValue
             to be returned to the caller.<br />For values that are wildcards of the form '%Name%'
             a recursive replacement takes place (only for GetStringValue(...)).<br />
             Manages an additional list that is filled with key-value pairs from the outside.
             This list is also taken into account in the search.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ApplicationEnvironment_AppSettingsRegistry.htm">AppSettingsRegistry</a></td><td>
            Creates a common static ConcurrentDictionary for several AppEnvReader instances.
            which can be used to manage a shared parameter list.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ApplicationEnvironment_BasicAppSettings.htm">BasicAppSettings</a></td><td>
             Retrieves application settings from various sources:
             Command line, app.config, if necessary app.config.user, Environment.<br />
             Also implements registry reading, but does not yet use this itself.
             Under certain circumstances, also evaluates public properties (DumpAppSettings=true).
             Does not access the database, but provides corresponding properties.<br />
             The properties and the filling of the same are not mandatory, they serve
             for convenience only; alternatively, it can also be accessed directly from the application via the
             interfaces IGetStringValue and IGetValue&lt;T&gt; can be used to access the application/system environment.<br />
             The application settings implemented here should be generally valid for
             standalone applications; for application-specific settings, this class should be
             can be derived.
             Sources are analysed in the following order (the 1st hit wins):<br />
                 1. command line parameters (not for .NetCore web applications)<br />
                 2. settings in the app.config (not for .NetCore web applications, then appsettings.json instead)<br />
                 3. settings in the app.Config.user if necessary<br />
                 4. environment<br />
                 5th registry<br />
                 6. possibly public properties (DumpAppSettings=true).<br />
             Time-critical Initializations should generally be avoided in derived AppSettings.
             However, the corresponding properties can be defined and implemented lazily if necessary.<br />
             The "DumpAppSettings" and "DumpLoadedAssemblies" properties can be used to debug all properties with
             their sources and the FullNames of all assemblies loaded at runtime are logged.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ApplicationEnvironment_ClickOnceDeploymentException.htm">ClickOnceDeploymentException</a></td><td>
            Special exception type for ClickOnce exceptions.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ApplicationEnvironment_ClickOnceInfo.htm">ClickOnceInfo</a></td><td>
            This is a partial replacement for ApplicationDeployment which is not available in .NET 6
            We use a custom Launcher.exe which will set various "CLICKONCE_*" local environment variables
            Thanks to Simon Hewitt (simmotech) for this helpful workaround.
            https://github.com/simmotech/Net6ClickOnce
            Important: This only works if the app is installed via the modified "launcher.exe".
            is started from the project ...Net6ClickOnce-master\ClickOnceLauncher.
            Otherwise, the additional environment variables are not set and Defauts are returned.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ApplicationEnvironment_ClickOnceUpdateInfo.htm">ClickOnceUpdateInfo</a></td><td>
            Class with ClickOnce update information.
            </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ApplicationEnvironment_CommandLineAccess.htm">CommandLineAccess</a></td><td>
             Access to command line parameters<br />
                       Implements IGetStringValue.
                       Minimal functionality:<br />
                       If the transferred key exists in the command line,
                       this is returned unchanged, otherwise the
                       Default Value.
                       If the transferred key is numeric, an attempt is made to recognise it with
                       to access it as an index in the command line parameters;
                       If successful, the corresponding value is returned,
                       otherwise the default value.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ApplicationEnvironment_EnvAccess.htm">EnvAccess</a></td><td>
             Access to the environment and to some application properties.<br />
                       Implements IGetStringValue.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ApplicationEnvironment_PropertyAccess.htm">PropertyAccess</a></td><td>
             Access to properties of the current application (AppSettings).<br />
             Uses System.Reflection, implements IGetStringValue.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ApplicationEnvironment_RegAccess.htm">RegAccess</a></td><td>
             Reads values from the registry.
             </td></tr><tr><td><img src="../icons/pubClass.gif" alt="Public Class" title="Public Class" /></td><td><a href="T_NetEti_ApplicationEnvironment_SettingsAccess.htm">SettingsAccess</a></td><td>
             Access to the AppSettings managed via the .Net framework<br />
                       Implements IGetStringValue.
             </td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDJCA')" onkeypress="SectionExpandCollapse_CheckKey('IDJCA', event)" tabindex="0"><img id="IDJCAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enumerations</span></div><div id="IDJCASection" class="collapsibleSection"><table id="enumerationList" class="members"><tr><th class="iconColumn"> </th><th>Enumeration</th><th>Description of the</th></tr><tr><td><img src="../icons/pubEnumeration.gif" alt="Public Enumeration" title="Public Enumeration" /></td><td><a href="T_NetEti_ApplicationEnvironment_RegistryRoot.htm">RegistryRoot</a></td><td>
            Enumeration of the registry root keys.
            </td></tr></table></div></div></div><div id="PageFooter" class="pageFooter">Naturally, many findings and developments are based on information freely available on the Internet. Any missing references to original authors are unintentional and will be updated as soon as they are reported.<p>Copyright © 2012-2025 Erik Nagel</p><div class="feedbackLink">Send comments about this feature to
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback will be used to improve the documentation and the product. Your email address will not be used for any other purpose and will be deleted after the reported issue has been resolved. While working on the problem, you may be contacted by email for further details or clarification of your feedback. After the problem has been isolated, you may receive an email to resolve the issue.");
        </script></div></body></html>