<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-US" /><meta name="Microsoft.Help.Locale" content="en-US" /><meta name="Microsoft.Help.TopicLocale" content="en-US" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>LogicalTaskTreeViewModel.FlattenTree method</title><meta name="Title" content="FlattenTree method" /><meta name="Microsoft.Help.Id" content="M:Vishnu.ViewModel.LogicalTaskTreeViewModel.FlattenTree(Vishnu.ViewModel.LogicalNodeViewModel,System.Collections.ObjectModel.ObservableCollection{Vishnu.ViewModel.LogicalNodeViewModel},Vishnu.Interchange.NodeTypes,System.Boolean)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="LogicalTaskTreeViewModel.FlattenTree method" /><meta name="System.Keywords" content="FlattenTree method" /><meta name="Microsoft.Help.F1" content="Vishnu.ViewModel.LogicalTaskTreeViewModel.FlattenTree" /><meta name="Microsoft.Help.F1" content="LogicalTaskTreeViewModel.FlattenTree" /><meta name="Microsoft.Help.F1" content="FlattenTree" /><meta name="container" content="Vishnu.ViewModel" /><meta name="file" content="M_Vishnu_ViewModel_LogicalTaskTreeViewModel_FlattenTree" /><meta name="guid" content="M_Vishnu_ViewModel_LogicalTaskTreeViewModel_FlattenTree" /><meta name="Description" content="Turns a transferred (sub)tree into a flat list. Which node types are displayed in the list and which are not can be defined externally in the app." /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">Vishnu - logical monitoring job controller</div><div class="pageBody"><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Vishnu_64.png" /></td><td class="titleColumn"><h1>Logical<wbr />Task<wbr />Tree<wbr />View<wbr />Model<span id="LST5FD0CED3_0" data-languageSpecificText="cpp=::|nu=."></span>Flatten<wbr />Tree method</h1></td></tr></table><div class="summary">
            Turns a transferred (sub)tree into a flat list.
            Which node types are displayed in the list and which are not,
            can be configured externally in the app.config via
              "FlatNodeListFilter"
              value="NodeConnector|ValueModifier|Constant|Checker|NodeList|JobList|Snapshot"
            be determined.
            </div><br /><strong>Namespace:</strong> <a href="N_Vishnu_ViewModel.htm">Vishnu.ViewModel</a><br /><strong>Assembly:</strong> Vishnu.ViewModel (in Vishnu.ViewModel.dll) Version: 1.0.0+df0404e911d6c38eaed3bb1bb1acfc482d417643<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','4');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','4');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','4');return false;">C++</a></div><div id="IDAB_tab4" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">ObservableCollection</span>&lt;<span class="identifier">LogicalNodeViewModel</span>&gt; <span class="identifier">FlattenTree</span>(
	
	<span class="identifier">LogicalNodeViewModel</span> <span class="parameter">root</span>,
	
	<span class="identifier">ObservableCollection</span>&lt;<span class="identifier">LogicalNodeViewModel</span>&gt; <span class="parameter">flatNodeList</span>,
	
	<span class="identifier">NodeTypes</span> <span class="parameter">flatNodeListFilter</span>,
	
	<span class="identifier">bool</span> <span class="parameter">withRoot</span> = <span class="keyword">true</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">FlattenTree</span> (
	 
	<span class="parameter">root</span> <span class="keyword">As</span> <span class="identifier">LogicalNodeViewModel</span>,
	
	<span class="parameter">flatNodeList</span> <span class="keyword">As</span> <span class="identifier">ObservableCollection</span>(<span class="keyword">Of</span> <span class="identifier">LogicalNodeViewModel</span>),
	
	<span class="parameter">flatNodeListFilter</span> <span class="keyword">As</span> <span class="identifier">NodeTypes</span>,
	Optional <span class="parameter">withRoot</span> <span class="keyword">As</span> <span class="identifier">Boolean</span> = <span class="keyword">true</span>
) <span class="keyword">As</span> <span class="identifier">ObservableCollection</span>(<span class="keyword">Of</span> <span class="identifier">LogicalNodeViewModel</span>)</pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">ObservableCollection</span>&lt;<span class="identifier">LogicalNodeViewModel</span>^&gt;^ <span class="identifier">FlattenTree</span>(
	
	<span class="identifier">LogicalNodeViewModel</span>^ <span class="parameter">root</span>,
	 
	<span class="identifier">ObservableCollection</span>&lt;<span class="identifier">LogicalNodeViewModel</span>^&gt;^ <span class="parameter">flatNodeList</span>,
	 
	<span class="identifier">NodeTypes</span> <span class="parameter">flatNodeListFilter</span>,
	 
	<span class="identifier">bool</span> <span class="parameter">withRoot</span> = <span class="keyword">true</span>
)</pre></div><div id="IDAB_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">FlattenTree</span> : 
        <span class="parameter">root</span> : <span class="identifier">LogicalNodeViewModel</span> * 
        <span class="parameter">flatNodeList</span> : <span class="identifier">ObservableCollection</span>&lt;<span class="identifier">LogicalNodeViewModel</span>&gt; * 
        <span class="parameter">flatNodeListFilter</span> : <span class="identifier">NodeTypes</span> *
        ?<span class="parameter">withRoot</span> : <span class="identifier">bool</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">withRoot</span> = defaultArg <span class="identifier">withRoot</span> <span class="keyword">true</span>
*)
<span class="keyword">-&gt;</span> <span class="identifier">ObservableCollection</span>&lt;<span class="identifier">LogicalNodeViewModel</span>&gt; </pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">root</span>  <a href="T_Vishnu_ViewModel_LogicalNodeViewModel.htm">LogicalNodeViewModel</a></dt><dd>Root node of the (sub)tree.</dd><dt class="has-text-weight-normal"><span class="parameter">flatNodeList</span>  <a href="https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1" target="_blank" rel="noopener noreferrer">ObservableCollection</a><span id="LST5FD0CED3_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="T_Vishnu_ViewModel_LogicalNodeViewModel.htm">LogicalNodeViewModel</a><span id="LST5FD0CED3_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>ObservableCollection for recording the nodes.</dd><dt class="has-text-weight-normal"><span class="parameter">flatNodeListFilter</span>  <a href="T_Vishnu_Interchange_NodeTypes.htm">NodeTypes</a></dt><dd>Filter for node types that should not be included in the list.</dd><dt class="has-text-weight-normal"><span class="parameter">withRoot</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a>  (Optional)</dt><dd>If True, the root node is also included in the list (default: True).</dd></dl><h4>Return value</h4><a href="https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1" target="_blank" rel="noopener noreferrer">ObservableCollection</a><span id="LST5FD0CED3_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="T_Vishnu_ViewModel_LogicalNodeViewModel.htm">LogicalNodeViewModel</a><span id="LST5FD0CED3_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><br />Flat list (ObservableCollection) of the nodes of the (sub)tree.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="T_Vishnu_ViewModel_LogicalTaskTreeViewModel.htm">LogicalTaskTreeViewModel class</a></div><div><a href="N_Vishnu_ViewModel.htm">Vishnu.ViewModel namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter">Naturally, many findings and developments are based on information freely available on the Internet. Any missing references to original authors are unintentional and will be updated as soon as they are reported.<p>Copyright © 2012-2025 Erik Nagel</p><div class="feedbackLink">Send comments about this feature to
        <a id="HT_MailLink" href="mailto:Vishnu%40reallyhuman.net?Subject=Vishnu%20-%20der%20logische%20Prozess-Monitor">Vishnu@reallyhuman.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback will be used to improve the documentation and the product. Your email address will not be used for any other purpose and will be deleted after the reported issue has been resolved. While working on the problem, you may be contacted by email for further details or clarification of your feedback. After the problem has been isolated, you may receive an email to resolve the issue.");
        </script></div></body></html>