<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UserChecker</name>
    </assembly>
    <members>
        <member name="T:Vishnu_UserModules.UserChecker_ReturnObject">
             <summary>
             ReturnObject für das Ergebnis des Demo-UserCheckers.
             </summary>
             <remarks>
             Autor: Erik Nagel, NetEti
            
             23.02.2020 Erik Nagel: erstellt
             </remarks>
        </member>
        <member name="P:Vishnu_UserModules.UserChecker_ReturnObject.DefaultResultProperty">
            <summary>
            Demo-Property.
            Das UserChecker_ReturnObject kann prinzipiell beliebige öffentliche Properties besitzen.
            Wichtig ist dann nur, dass diese in den nachfolgenden Serialisierungs- Deserialisierungsroutinen
            entsprechend berücksichtigt werden.
            </summary>
        </member>
        <member name="M:Vishnu_UserModules.UserChecker_ReturnObject.#ctor">
            <summary>
            Standard-Konstruktor - setzt die DefaultResultProperty auf den Default wert.
            </summary>
        </member>
        <member name="M:Vishnu_UserModules.UserChecker_ReturnObject.#ctor(System.String)">
            <summary>
            Konstruktor - übernimmt einen String-Wert für die DefaultResultProperty.
            </summary>
            <param name="resultProperty">String-Wert für die DefaultResultProperty</param>
        </member>
        <member name="M:Vishnu_UserModules.UserChecker_ReturnObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialisierungs-Konstruktor.
            </summary>
            <param name="info">Property-Container.</param>
            <param name="context">Übertragungs-Kontext.</param>
        </member>
        <member name="M:Vishnu_UserModules.UserChecker_ReturnObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialisierungs-Hilfsroutine: holt die Objekt-Properties in den Property-Container.
            </summary>
            <param name="info">Property-Container.</param>
            <param name="context">Serialisierungs-Kontext.</param>
        </member>
        <member name="M:Vishnu_UserModules.UserChecker_ReturnObject.ToString">
            <summary>
            Überschriebene ToString()-Methode - stellt alle öffentlichen Properties
            als einen aufbereiteten String zur Verfügung.
            </summary>
            <returns>Alle öffentlichen Properties als ein String aufbereitet.</returns>
        </member>
        <member name="M:Vishnu_UserModules.UserChecker_ReturnObject.Equals(System.Object)">
            <summary>
            Vergleicht dieses Result mit einem übergebenen Result nach Inhalt.
            </summary>
            <param name="obj">Das zu vergleichende Result.</param>
            <returns>True, wenn das übergebene Result inhaltlich gleich diesem Result ist.</returns>
        </member>
        <member name="M:Vishnu_UserModules.UserChecker_ReturnObject.GetHashCode">
            <summary>
            Erzeugt einen eindeutigen Hashcode für dieses Result.
            </summary>
            <returns>Hashcode (int).</returns>
        </member>
        <member name="T:Vishnu_UserModules.UserChecker">
             <summary>
             DemoChecker-Projekt für Vishnu.
             Die UserChecker.dll kann später in einer Vishnu-JobDescription.xml referenziert werden
             und von Vishnu bei der Ausführung des Jobs aus dem Plugin-Unterverzeichnis oder
             einem konfigurierten UserAssemblyDirectory dynamisch geladen werden.
             Vishnu ruft dann je nach weiteren Konfigurationen (Trigger) die öffentliche
             Methode "Run" des UserCheckers auf.
             TODO: ersetzen Sie diesen Kommentar durch Ihren eigenen Kommentar.
             </summary>
             <remarks>
             Autor: Erik Nagel
            
             30.01.2020 Erik Nagel: erstellt
             </remarks>
        </member>
        <member name="E:Vishnu_UserModules.UserChecker.NodeProgressChanged">
            <summary>
            Kann aufgerufen werden, wenn sich der Verarbeitungs-Fortschritt
            des Checkers geändert hat, muss aber zumindest aber einmal zum
            Schluss der Verarbeitung aufgerufen werden.
            </summary>
        </member>
        <member name="P:Vishnu_UserModules.UserChecker.ReturnObject">
            <summary>
            Rückgabe-Objekt des Checkers
            </summary>
        </member>
        <member name="M:Vishnu_UserModules.UserChecker.Run(System.Object,Vishnu.Interchange.TreeParameters,Vishnu.Interchange.TreeEvent)">
            <summary>
            Hier wird der Arbeitsprozess ausgeführt (oder beobachtet).
            </summary>
            <param name="checkerParameters">Ihre Aufrufparameter aus der JobDescription.xml oder null.</param>
            <param name="treeParameters">Für den gesamten Tree gültige Parameter oder null (z.Zt. unbenutzt).</param>
            <param name="source">Auslösendes TreeEvent (kann null sein).</param>
            <returns>True, False oder null</returns>
        </member>
    </members>
</doc>
