<?xml version="1.0" encoding="utf-8"?>
<topic id="2e84f44c-6249-45dc-bdc2-c656de87c907" revisionNumber="1">
	<developerConceptualDocument
	  xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
	  xmlns:xlink="http://www.w3.org/1999/xlink">

		<!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

		<introduction>
			<para>
				Hier finden Sie bisherigen Überlegungen oder Pläne zur Weiterentwicklung von <token>V</token>.
				Eine durchgängige Priorisierung findet nicht statt.
			</para>
			<list class="bullet">
				<listItem>
					<para>
						Mehrsprachige Dokumentation erstellen
					</para>
					<list class="bullet">
						<listItem>
							<para>
								Englischsprachige nicht-technische Dokumentation und Web-Präsenz
								(bedingt keine Sourcecode-Anpassungen).
							</para>
						</listItem>
						<listItem>
							<para>
								Englischsprachige technische Dokumentation (erfordert Sourcecode-Erweiterungen).
							</para>
						</listItem>
						<listItem>
							<para>
								Ggf. weitere Sprachen hinzufügen.
							</para>
						</listItem>
					</list>
				</listItem>
				<listItem>
					<para>
						<token>V</token>-Snapshots interaktiv machen
					</para>
					<para>
						<languageKeyword>Snapshots</languageKeyword> sind bisher readonly, das heißt:
						Jobs oder Checker können innerhalb von <languageKeyword>Snapshots</languageKeyword>
						nicht manuell neu gestartet werden.
					</para>
					<para>
						Spätestens hier müssen auch Sicherheitsaspekte berücksichtigung finden.
						Wer darf welche <languageKeyword>Checker</languageKeyword> von welchem Arbeitsplatz ausführen?
					</para>
				</listItem>
				<listItem>
					<para>
						Status-Tab mit Laufzeit-Informationen, wie Uptime, Parameter, Tree-Infos, Logfile ...
					</para>
				</listItem>
				<listItem>
					<para>
						Die dynamischen Grids mit quadratischem Zuschnitt aus der <languageKeyword>Jobs</languageKeyword>-Ansicht
						auch in der <languageKeyword>Tree</languageKeyword>-Ansicht für mehrere mit <database>AND</database>
						verknüpfte Knoten unterhalb einer Joblist oder NodeList nutzen. Dadurch würde auch für die
						<languageKeyword>Tree</languageKeyword>-Ansicht bei Gruppen mit vielen
						<database>AND</database>-Verknüpfungen eine deutlich bessere Bildschirmaufteilung erreicht.
					</para>
				</listItem>
				<listItem>
					<para>
						Zusätzliche Ansicht, die nur die relevanten Fehlerfälle anzeigt.
					</para>
				</listItem>
				<listItem>
					<para>
						<token>V</token>-Dark Mode und weitere Designs.
					</para>
				</listItem>
				<listItem>
					<para>
						<token>V</token>-Meldungen per Messenger (Telegram, WhatsAp, Signal).
					</para>
				</listItem>
				<listItem>
					<para>
						<token>V</token>-MicroMailer: Standard-Mailprogramm ansteuern.
					</para>
				</listItem>
				<listItem>
					<para>
						<token>V</token>-App, <token>V</token> as a service
					</para>
					<para>
						Einfacher Ansatz: über <languageKeyword>Snapshots</languageKeyword>;<lineBreak />
						vollstängige Lösung: über Ersetzung der UI-Schichten.
					</para>
				</listItem>
				<listItem>
					<para>
						Den <token>V</token>-Quellcode mit Unit-Tests ausstatten
					</para>
					<para>
						Vishnu enthält (bisher) keine Unit-Tests.
						Allerdings existieren für alle verwendeten Komponenten eigenständige Demo-Projekte, die
						die Komponenten testen und deren Gebrauch demonstrieren.<lineBreak/>
						Es gibt darüber hinaus eine Reihe aussagekräftiger und gut dokumentierter Integrationstest
						(siehe ...\VishnuHome\Tests\TestJobs\Testprotokoll.xls).<lineBreak />
					</para>
					<alert class="note">
						<para>
							Auch wenn ich selbst finde, dass Unit-Testing insgesamt zu stark gehyped wird, sehe ich doch, dass Unit Tests
							eine wichtige Unterstützung der (Weiter-)Entwicklung sind. Ich habe es leider versäumt, diese von Anfang an mit zu pflegen.
							Wer hier nachträgliche Unterstützungsarbeit leisten möchte, ist herzlich eingeladen.
						</para>
					</alert>
				</listItem>
			</list>
		</introduction>
		<section address="SieheAuch">
			<title>Siehe auch</title>
			<content>
				<para>
					<externalLink>
						<linkText>Unit Testing is Overrated</linkText>
						<linkAlternateText>Special thanks to Oleksii Holub</linkAlternateText>
						<linkUri>https://tyrrrz.me/blog/unit-testing-is-overrated</linkUri>
						<linkTarget>_self</linkTarget>
					</externalLink>
				</para>
				<para>
					<link xlink:href="68cd3f39-4a2c-49f3-8a90-b2442b5880a9" />
				</para>
			</content>
		</section>
		<relatedTopics />
	</developerConceptualDocument>
</topic>
